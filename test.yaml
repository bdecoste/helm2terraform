---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: default
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: default
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: default
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: default
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5jQnNZMk5vQjB5ZGVZSXV6U2lVd0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URXlORGN6TlZvWERUSTNNRFl4TVRFeQpORGN6TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1MjdHV1lqQzJKK1hnbUYzUm5NWGllN1lYSy9oWEd0TXZic1I1MmZvZWFJb1htM3gKU0ZOUWJVMWZMYitSbkozZDZRVUVjRDFTeW1PMU5hdE9CM3RaeldmNGE3bCtVQTZZZnczZGlTQ2EzM0xVMng1dQpZL0pocE1tMk10NVg5Unhta0NHSjBkU0hQUUpNdUtKdVJLRmxSNDFXK0NxVGdzeUFHeWE4TEpKUmZkSGtUNGtLCkErZWRkbXZnSnY1cEI5dkZOaWNNUUJnKzV3Z3FJcG5WL0M4QXdCcjBTM0w4WTVIWDlIb3NzTXIwSTFnd1JiYk0KbTRrRHBWeVZXbmhiVlUvU0VWU0tMdE1ZVVdKTHhKMWFncGoybGpsdUcyakhDMjc1Ti9WNUI1L21NSmNPclNnagp6d3JRMVgyVEJhUk9lKzZLS3V3U2FPSHpmWWcxaXJ3cTg4Wm1Rd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0p2bGc3aENSRTRzbFpaS21CRS9YRGZWNGliTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3hJQWF6MGoxUFdHVzlOOXNVQ0RLUk9UcCtiQXdGTWVIdE5PbmllZkpudGhDb1dIN21ya3h4CnN4S1RjMWJFSkxyUWtTM2o1cWJ4bkF0TzhkU3pQSld5YkRIdnVBUU9ZVWpWWE5mcklTSG9qNmJoY1BxVVJpeE0KYTBnUnRJZVFtWkM2bjluNXpHU01kQjVhdW4vaFQ4WWg4MFBweERpajg1OFEzQitTMjlCWHFQanYvLzVLQzE3UAo0dTV1Mzd1Wit6aHhJZFc5OWIrTW1jaVNLZVduMXU2d2cyeWtQOVFTNE0rMEJSNTFFdm9tNVNQUXRRa2tXazYxCmZOUDJNbzFPc3hVSThWT3NwMzdzWlBOTVErekNxTGJ6YU1QRGNSR2pmSGVOMm1HYm96TzErR2JKVW5VRnIwM0cKYjdOeVZwZXBCeWJlNU95aXlUcDZ2WVNPcjVJSGpja2cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTI3R1dZakMySitYZ21GM1JuTVhpZTdZWEsvaFhHdE12YnNSNTJmb2VhSW9YbTN4ClNGTlFiVTFmTGIrUm5KM2Q2UVVFY0QxU3ltTzFOYXRPQjN0WnpXZjRhN2wrVUE2WWZ3M2RpU0NhMzNMVTJ4NXUKWS9KaHBNbTJNdDVYOVJ4bWtDR0owZFNIUFFKTXVLSnVSS0ZsUjQxVytDcVRnc3lBR3lhOExKSlJmZEhrVDRrSwpBK2VkZG12Z0p2NXBCOXZGTmljTVFCZys1d2dxSXBuVi9DOEF3QnIwUzNMOFk1SFg5SG9zc01yMEkxZ3dSYmJNCm00a0RwVnlWV25oYlZVL1NFVlNLTHRNWVVXSkx4SjFhZ3BqMmxqbHVHMmpIQzI3NU4vVjVCNS9tTUpjT3JTZ2oKendyUTFYMlRCYVJPZSs2S0t1d1NhT0h6ZllnMWlyd3E4OFptUXdJREFRQUJBb0lCQVFDb2VWM1l4TkUvSGRSMQo0VjN3K1NyRFZPa3VCdm11dE5QNkJ0aUZCQ1UyajhkeGVhbFR0Vytwajg1cHRMUVI3dVMwdTBuT0NaRU5VcXBqClgyTjMzaXhPTVpKZVloRmpySHJ1V1d3MEFoYXptdWd4UFIxRXdXMTdUY1J6M045Njl0aEozWnVmL0VURFZmblkKVEVpSmIvazFZNW8wM3pCUWRia0Fyc1NkMjdkY08zQUdVc0taZFdWQlplMHJUS2xtRXdqbUlZd05hV2UzVlZGVApYS2RNOGZHeVNZbFhobFZIdEhzdlFLQXpMbjZGTU5CV1M2bk5McGNwY3JMUzFtelRpV2cvUFFWbW5pN1FYbXpFCnpsak9SZGx3Vy9hUDFERElEdnZPODRyMHlhVHVaZWRRZVd6NlZrMFBpdit3YVRnRFhSendVbXdXakZ2azFIMGYKVCtySWZTbGhBb0dCQU4zT2ZwYjQ5VXFzNnZpNERHaHhnQmpjRG05S3grRTFocDRBZVpGR01ycUxuY0NFNFY1YwpEU0hBb0QrVEl0bDU0UEdhMjAxSDkrUXBDOXRGNlZ4UmRnbkljU0F6bm5aaWpzMG1Gamk5VnBIQjkwOFVwWVpqCmhFbGJTT09kZWVOUURoSVFPOWdjS0I0Q3NwNHIrOTlib05temxIU3hzcW9ZTVN5dnl4bGIvYUt2QW9HQkFOaFQKdW9BelpaMEFKRmg0VG92cStoSnJpYi8wY0QzWUxjYVNkc29pMlpuWjZNNExwb0lhZFZDdnozK3d3ZklCSWFCdQorUXhSQzIyMWlEOURNUnlna1FTVmE1dDQ2K20vb0RXdThQaGcrNEhRZjFsVWZOaytQd3dqNEwzcWFsR3hETG15CkFXUjBDQmVSUnA5cVIrZDcydVB5MFJaRFFWcTlMTUFra2x0WTdXcXRBb0dBY1NtVTlEbDRDKzFFeERoQ1BGY0wKMzZNRnlrb0F5Q21pMEtHMVpDVElaTnd1VTdaM3RNaUorcHBvSjRkTjFGNldJUzI4alNVV2w5VkpNMG5yMFNuTwpheGRVZi9WVjkxZzVPdmtmaFRzMEc1RTJONlowL0tkeEttdmtPQnh6djBGc3JGS1Q5YUlINWFmQ3NXZ0hUT0ZXCm96czNsb0hDZ1gxdU9UcEhDRjBpZmdrQ2dZQlZSR3Qyck11WW5yMjB3WGIwWDZKQ01IRVRZRjM5Z29CSWpPS1YKdWpiYkZiRlZ4ZkhUeG1vSGE4VDJKODNLZmZlckxSS3RjQ1I1RWR5cVV1bkF4dWxpVFNNbEhQeWdIaEFnR055UwppbWVZTzM1MnozNkdncXFITm4wWFhwYVpySmUvZWhKaWJmbmlrRGl1RFU1YVI4OTNtZllnT0ZKQ1dkNlJ2ZGlTCmVQTGI0UUtCZ0RnMzRVWUZkT01aRzJldmpyd09PUS9yY25LeTZvVHNaUDV2NzZCNVdnMjhlQ2VFdkhnVWx3elEKeXdUSjE4VFUvbHB5TFVUVU5CbUI5UTlnMUgyeXBMcjNRL0RQYkhwWGx1clZabUwwS0QwN2ZoZk1sb1JoZkFNagpQRDJIclhKVFFWOG5PYjl4R1BtNjFHU2xxVkt1Vms3WjJKYlg3VVZYVGxrNVpHVTVSY3BuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: default
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5jQnNZMk5vQjB5ZGVZSXV6U2lVd0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URXlORGN6TlZvWERUSTNNRFl4TVRFeQpORGN6TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1MjdHV1lqQzJKK1hnbUYzUm5NWGllN1lYSy9oWEd0TXZic1I1MmZvZWFJb1htM3gKU0ZOUWJVMWZMYitSbkozZDZRVUVjRDFTeW1PMU5hdE9CM3RaeldmNGE3bCtVQTZZZnczZGlTQ2EzM0xVMng1dQpZL0pocE1tMk10NVg5Unhta0NHSjBkU0hQUUpNdUtKdVJLRmxSNDFXK0NxVGdzeUFHeWE4TEpKUmZkSGtUNGtLCkErZWRkbXZnSnY1cEI5dkZOaWNNUUJnKzV3Z3FJcG5WL0M4QXdCcjBTM0w4WTVIWDlIb3NzTXIwSTFnd1JiYk0KbTRrRHBWeVZXbmhiVlUvU0VWU0tMdE1ZVVdKTHhKMWFncGoybGpsdUcyakhDMjc1Ti9WNUI1L21NSmNPclNnagp6d3JRMVgyVEJhUk9lKzZLS3V3U2FPSHpmWWcxaXJ3cTg4Wm1Rd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0p2bGc3aENSRTRzbFpaS21CRS9YRGZWNGliTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3hJQWF6MGoxUFdHVzlOOXNVQ0RLUk9UcCtiQXdGTWVIdE5PbmllZkpudGhDb1dIN21ya3h4CnN4S1RjMWJFSkxyUWtTM2o1cWJ4bkF0TzhkU3pQSld5YkRIdnVBUU9ZVWpWWE5mcklTSG9qNmJoY1BxVVJpeE0KYTBnUnRJZVFtWkM2bjluNXpHU01kQjVhdW4vaFQ4WWg4MFBweERpajg1OFEzQitTMjlCWHFQanYvLzVLQzE3UAo0dTV1Mzd1Wit6aHhJZFc5OWIrTW1jaVNLZVduMXU2d2cyeWtQOVFTNE0rMEJSNTFFdm9tNVNQUXRRa2tXazYxCmZOUDJNbzFPc3hVSThWT3NwMzdzWlBOTVErekNxTGJ6YU1QRGNSR2pmSGVOMm1HYm96TzErR2JKVW5VRnIwM0cKYjdOeVZwZXBCeWJlNU95aXlUcDZ2WVNPcjVJSGpja2cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTI3R1dZakMySitYZ21GM1JuTVhpZTdZWEsvaFhHdE12YnNSNTJmb2VhSW9YbTN4ClNGTlFiVTFmTGIrUm5KM2Q2UVVFY0QxU3ltTzFOYXRPQjN0WnpXZjRhN2wrVUE2WWZ3M2RpU0NhMzNMVTJ4NXUKWS9KaHBNbTJNdDVYOVJ4bWtDR0owZFNIUFFKTXVLSnVSS0ZsUjQxVytDcVRnc3lBR3lhOExKSlJmZEhrVDRrSwpBK2VkZG12Z0p2NXBCOXZGTmljTVFCZys1d2dxSXBuVi9DOEF3QnIwUzNMOFk1SFg5SG9zc01yMEkxZ3dSYmJNCm00a0RwVnlWV25oYlZVL1NFVlNLTHRNWVVXSkx4SjFhZ3BqMmxqbHVHMmpIQzI3NU4vVjVCNS9tTUpjT3JTZ2oKendyUTFYMlRCYVJPZSs2S0t1d1NhT0h6ZllnMWlyd3E4OFptUXdJREFRQUJBb0lCQVFDb2VWM1l4TkUvSGRSMQo0VjN3K1NyRFZPa3VCdm11dE5QNkJ0aUZCQ1UyajhkeGVhbFR0Vytwajg1cHRMUVI3dVMwdTBuT0NaRU5VcXBqClgyTjMzaXhPTVpKZVloRmpySHJ1V1d3MEFoYXptdWd4UFIxRXdXMTdUY1J6M045Njl0aEozWnVmL0VURFZmblkKVEVpSmIvazFZNW8wM3pCUWRia0Fyc1NkMjdkY08zQUdVc0taZFdWQlplMHJUS2xtRXdqbUlZd05hV2UzVlZGVApYS2RNOGZHeVNZbFhobFZIdEhzdlFLQXpMbjZGTU5CV1M2bk5McGNwY3JMUzFtelRpV2cvUFFWbW5pN1FYbXpFCnpsak9SZGx3Vy9hUDFERElEdnZPODRyMHlhVHVaZWRRZVd6NlZrMFBpdit3YVRnRFhSendVbXdXakZ2azFIMGYKVCtySWZTbGhBb0dCQU4zT2ZwYjQ5VXFzNnZpNERHaHhnQmpjRG05S3grRTFocDRBZVpGR01ycUxuY0NFNFY1YwpEU0hBb0QrVEl0bDU0UEdhMjAxSDkrUXBDOXRGNlZ4UmRnbkljU0F6bm5aaWpzMG1Gamk5VnBIQjkwOFVwWVpqCmhFbGJTT09kZWVOUURoSVFPOWdjS0I0Q3NwNHIrOTlib05temxIU3hzcW9ZTVN5dnl4bGIvYUt2QW9HQkFOaFQKdW9BelpaMEFKRmg0VG92cStoSnJpYi8wY0QzWUxjYVNkc29pMlpuWjZNNExwb0lhZFZDdnozK3d3ZklCSWFCdQorUXhSQzIyMWlEOURNUnlna1FTVmE1dDQ2K20vb0RXdThQaGcrNEhRZjFsVWZOaytQd3dqNEwzcWFsR3hETG15CkFXUjBDQmVSUnA5cVIrZDcydVB5MFJaRFFWcTlMTUFra2x0WTdXcXRBb0dBY1NtVTlEbDRDKzFFeERoQ1BGY0wKMzZNRnlrb0F5Q21pMEtHMVpDVElaTnd1VTdaM3RNaUorcHBvSjRkTjFGNldJUzI4alNVV2w5VkpNMG5yMFNuTwpheGRVZi9WVjkxZzVPdmtmaFRzMEc1RTJONlowL0tkeEttdmtPQnh6djBGc3JGS1Q5YUlINWFmQ3NXZ0hUT0ZXCm96czNsb0hDZ1gxdU9UcEhDRjBpZmdrQ2dZQlZSR3Qyck11WW5yMjB3WGIwWDZKQ01IRVRZRjM5Z29CSWpPS1YKdWpiYkZiRlZ4ZkhUeG1vSGE4VDJKODNLZmZlckxSS3RjQ1I1RWR5cVV1bkF4dWxpVFNNbEhQeWdIaEFnR055UwppbWVZTzM1MnozNkdncXFITm4wWFhwYVpySmUvZWhKaWJmbmlrRGl1RFU1YVI4OTNtZllnT0ZKQ1dkNlJ2ZGlTCmVQTGI0UUtCZ0RnMzRVWUZkT01aRzJldmpyd09PUS9yY25LeTZvVHNaUDV2NzZCNVdnMjhlQ2VFdkhnVWx3elEKeXdUSjE4VFUvbHB5TFVUVU5CbUI5UTlnMUgyeXBMcjNRL0RQYkhwWGx1clZabUwwS0QwN2ZoZk1sb1JoZkFNagpQRDJIclhKVFFWOG5PYjl4R1BtNjFHU2xxVkt1Vms3WjJKYlg3VVZYVGxrNVpHVTVSY3BuCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: default
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5jQnNZMk5vQjB5ZGVZSXV6U2lVd0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URXlORGN6TlZvWERUSTNNRFl4TVRFeQpORGN6TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1MjdHV1lqQzJKK1hnbUYzUm5NWGllN1lYSy9oWEd0TXZic1I1MmZvZWFJb1htM3gKU0ZOUWJVMWZMYitSbkozZDZRVUVjRDFTeW1PMU5hdE9CM3RaeldmNGE3bCtVQTZZZnczZGlTQ2EzM0xVMng1dQpZL0pocE1tMk10NVg5Unhta0NHSjBkU0hQUUpNdUtKdVJLRmxSNDFXK0NxVGdzeUFHeWE4TEpKUmZkSGtUNGtLCkErZWRkbXZnSnY1cEI5dkZOaWNNUUJnKzV3Z3FJcG5WL0M4QXdCcjBTM0w4WTVIWDlIb3NzTXIwSTFnd1JiYk0KbTRrRHBWeVZXbmhiVlUvU0VWU0tMdE1ZVVdKTHhKMWFncGoybGpsdUcyakhDMjc1Ti9WNUI1L21NSmNPclNnagp6d3JRMVgyVEJhUk9lKzZLS3V3U2FPSHpmWWcxaXJ3cTg4Wm1Rd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0p2bGc3aENSRTRzbFpaS21CRS9YRGZWNGliTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3hJQWF6MGoxUFdHVzlOOXNVQ0RLUk9UcCtiQXdGTWVIdE5PbmllZkpudGhDb1dIN21ya3h4CnN4S1RjMWJFSkxyUWtTM2o1cWJ4bkF0TzhkU3pQSld5YkRIdnVBUU9ZVWpWWE5mcklTSG9qNmJoY1BxVVJpeE0KYTBnUnRJZVFtWkM2bjluNXpHU01kQjVhdW4vaFQ4WWg4MFBweERpajg1OFEzQitTMjlCWHFQanYvLzVLQzE3UAo0dTV1Mzd1Wit6aHhJZFc5OWIrTW1jaVNLZVduMXU2d2cyeWtQOVFTNE0rMEJSNTFFdm9tNVNQUXRRa2tXazYxCmZOUDJNbzFPc3hVSThWT3NwMzdzWlBOTVErekNxTGJ6YU1QRGNSR2pmSGVOMm1HYm96TzErR2JKVW5VRnIwM0cKYjdOeVZwZXBCeWJlNU95aXlUcDZ2WVNPcjVJSGpja2cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU1qNDJWZW9wVU5SQ2lVaDBGQWtrOHd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URXlORGN6TlZvWERUSTNNRFl4TVRFeQpORGN6TlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRyRTRyOXdFUFI5MkNmdnpwM2krR2RFZko1OTUKdE1pUmVpZ25rQ0s4WDlaM3RweVE5WlVZdnhzZmJHaVFJb0F5ODNESGQvdnIyd3BYK0UxQ3Z0ek1zODJ2NlhpRQo4cDNzUWNOKzR2QUtCTm9NWW9WbmQrNElEMC8yVjZtMlU1b0RaRTlHemg5dklCdjMybkVwTVN2NzQvdnF1dnR1Cmk2dk1oazYrY3BIR3Nudi90RzV2SnNONCtZWjlVMVVDK0lWcGRnSDZERmRoeVNjeCsrb0xBdFpraGxZTlZWRVYKK1pnS2tPazJhOWk1aTFMVkplOGpqdk14SUtkYTJtdy8vWkR3dE9iMTBWa2RJQ2xaSW1rbXQ3UWZjcG5YcnN1bApsb2gyU3UyZk5CcFdYU2FFYjRsalpKaWM4aTdlZlRvT0xSM2g4TlV2eDR3Y0ZjOVVYOU56RkJDR2pRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWliNVlPNFFrUk9MSldXU3BnUlAxdwozMWVJbXpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRER2amRZK1RGRjdwMVZielVJQWVpVFM0a1hXUWU2M2ZLZUVjTHNLQnROY1ZoSkUKdldqYUoyWmJnSFQ2MFFNbG5BVnVyRTdqRENGRVZ1eHd3WFlHSEZoVmE0eTJBU3dxSWhwanhzTm5uMGd2OGs3aQpjZGU3bWVSSzZEN25pVW83djdtSXdDbVFzNWh4WFEwR1ZwZHZEd0Z1YXM0Zm43YnVlQkhpeTFNL09NSWtWM0F4CmRrajdlQnBrUnArRDRramJwT0p5SHV6TkJnaytQejNLdVhaVlZmZTZEbERwMG1lVzFDdXJobDdsQXlVM2pTSEIKUnF1bkIwS2VUbzk4Z2x5L1ZxanBMWGkycmhUY0RtMUdsRm9XNEZDTnNvREZyRmloSExmVDVvdXlrWndZbXV5VgphbHRKcEUxKzVjcEtobFNFNnVkNHV5RlBpSUoycktGZkVOQjNjcms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdHJFNHI5d0VQUjkyQ2Z2enAzaStHZEVmSjU5NXRNaVJlaWdua0NLOFg5WjN0cHlRCjlaVVl2eHNmYkdpUUlvQXk4M0RIZC92cjJ3cFgrRTFDdnR6TXM4MnY2WGlFOHAzc1FjTis0dkFLQk5vTVlvVm4KZCs0SUQwLzJWNm0yVTVvRFpFOUd6aDl2SUJ2MzJuRXBNU3Y3NC92cXV2dHVpNnZNaGs2K2NwSEdzbnYvdEc1dgpKc040K1laOVUxVUMrSVZwZGdINkRGZGh5U2N4KytvTEF0WmtobFlOVlZFVitaZ0trT2syYTlpNWkxTFZKZThqCmp2TXhJS2RhMm13Ly9aRHd0T2IxMFZrZElDbFpJbWttdDdRZmNwblhyc3VsbG9oMlN1MmZOQnBXWFNhRWI0bGoKWkppYzhpN2VmVG9PTFIzaDhOVXZ4NHdjRmM5VVg5TnpGQkNHalFJREFRQUJBb0lCQVFDejNPTGNjSlpUdndldAphTHBIcFI0enVLa2RqMnA1VEFXOTZJNmEzemZxZXZHOWZZTlI1UXBLQzkveUVUZm1YNlRKKzd6R0tlWFk3dVFRCjk2L0F6UTFUOEN0Q2huOE5oZUUyRmN4MGpMS3dlQ1E5VXUyOUswSVFJVDk4cXY5d2EyN3ZjUVZhcGFQNFR0REQKNVNrUzJpVFNIaERKS2dWNXlSaEJHb0Z4dG9lUzY4cmJSekkrMkpnRWhhR1VhK1dMcVFzTHZmdXRiM3d4dEZvcQpiVFJBK0RNWTluRmNleFFzVkFKY0k4eElKUjAwM2dNdmVQbytkVWhEbHN3U0I2RWJyV2w3UG83RUxHNTN5OXMvCnJGVlVORk5VT2duM3R0djJUSitZMWpzb21QNndwU1VkYnYvRktDRXI0dFI4YW9zVGF5NCs0YUQzSHE0cFp2dTcKZzQ3YjJGUUJBb0dCQU1wVm8wdDNsTERXRXRxWE8vL1dIQ3FMSGRqMmprY1BtTGhhRVgyWTg5Nnh5QnBZTldNMQpEelFYeldmMTVteFcrckhTMzZHak0rYlpaZGUzOSsrdEdxZ003S1RnQkZhZXJKQmpXaUMzczlpSUtrSlNuWFdVCm9HR2FpOUtOM01Uc2UwK3JRM003QVFFdFJlaW82dlFxdHNwMkZjVVJJRW1UV1Y5dXQvVmorNWNOQW9HQkFPY2wKNDdGcWlBUzhXNk9WYUVrcVBhdWNveVJBNnNoK3FLTmtlaHFoRHBwY3Q3NDFIeCt1aDM1MldyMVFGT3ovU3NoZgpVZWN4Y2RTKzJDSVRMaDBlWDF5MHZORlhMUG82SDh0ZjhLN1NKd1RXSmRzaXpobThpTGNPQ3ZTcjcvclVlSzdqCmFTaDJjQmJvcEg1RGVGLy9xZnpJODB4ZGQ5YlRlYlNuK29yT3BNMkJBb0dBTlV5NTUzZG93K3lncXRTTUNhanQKWW9lakpUUk41b3BGUU1yNU1JektNUy9EOXF5bDQ2eG1oT0tBU1pLTlVKelpEVjd2YWpVRHh4d2RwK1hlZWxTdgpZUFdHb1NnaC9HOXdKZGtHTlBndmVDcm1kdklzYUh6dWdzZWpiYVBSTkU3WGJQVkFuMm83cVlPemxzWm9ua2xpClBaTTl5TnZxRlhlclkyaFhMVjFaT1VFQ2dZQTg5ZDBxK1RHT0xpN3M0WVp6WlZTR1lmVVVwcHBFN2tLRGRRaE8KNVpMNFd1T0tvbS9tNXh5TTJhSHNzNllSS3ZNS0RUbUlnNTNGd2Q4MmZXQjRCWDZZOElHcnBCWVVtQ2V5ZDBiKwpsQ1grUEl3WFV3S1Avd3ovV2hEQm5tYlgvQmtuNW9uaFJmc2h6NUV5UzVEL29HbXdaVDdsTVBGZUVyL1NTVXJtCk9NRjJBUUtCZ0NFLzVTSnBZNXp2S0lCeDg0VWVMNVdlNWFGVERhVlppSmRpU1dLZWoweVNrOGVHM3BseTV3ZHgKL1N2NUoyZUhjZU9rWUNUcnZKcmE2UjdHNkkrN2hsc0tJM0Q1SGpLMjdSNktuSjcwSWtac3VNemozUCtscmhENgp3K2NMT2lFSHBvMFJlenE2QkxGUG1hY3dnNXJMaUFRbk5SSTJ6RllTR3pNUHoyYWZ2dUdRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: default
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5jQnNZMk5vQjB5ZGVZSXV6U2lVd0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URXlORGN6TlZvWERUSTNNRFl4TVRFeQpORGN6TlZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF1MjdHV1lqQzJKK1hnbUYzUm5NWGllN1lYSy9oWEd0TXZic1I1MmZvZWFJb1htM3gKU0ZOUWJVMWZMYitSbkozZDZRVUVjRDFTeW1PMU5hdE9CM3RaeldmNGE3bCtVQTZZZnczZGlTQ2EzM0xVMng1dQpZL0pocE1tMk10NVg5Unhta0NHSjBkU0hQUUpNdUtKdVJLRmxSNDFXK0NxVGdzeUFHeWE4TEpKUmZkSGtUNGtLCkErZWRkbXZnSnY1cEI5dkZOaWNNUUJnKzV3Z3FJcG5WL0M4QXdCcjBTM0w4WTVIWDlIb3NzTXIwSTFnd1JiYk0KbTRrRHBWeVZXbmhiVlUvU0VWU0tMdE1ZVVdKTHhKMWFncGoybGpsdUcyakhDMjc1Ti9WNUI1L21NSmNPclNnagp6d3JRMVgyVEJhUk9lKzZLS3V3U2FPSHpmWWcxaXJ3cTg4Wm1Rd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0p2bGc3aENSRTRzbFpaS21CRS9YRGZWNGliTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ3hJQWF6MGoxUFdHVzlOOXNVQ0RLUk9UcCtiQXdGTWVIdE5PbmllZkpudGhDb1dIN21ya3h4CnN4S1RjMWJFSkxyUWtTM2o1cWJ4bkF0TzhkU3pQSld5YkRIdnVBUU9ZVWpWWE5mcklTSG9qNmJoY1BxVVJpeE0KYTBnUnRJZVFtWkM2bjluNXpHU01kQjVhdW4vaFQ4WWg4MFBweERpajg1OFEzQitTMjlCWHFQanYvLzVLQzE3UAo0dTV1Mzd1Wit6aHhJZFc5OWIrTW1jaVNLZVduMXU2d2cyeWtQOVFTNE0rMEJSNTFFdm9tNVNQUXRRa2tXazYxCmZOUDJNbzFPc3hVSThWT3NwMzdzWlBOTVErekNxTGJ6YU1QRGNSR2pmSGVOMm1HYm96TzErR2JKVW5VRnIwM0cKYjdOeVZwZXBCeWJlNU95aXlUcDZ2WVNPcjVJSGpja2cKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQUpmWkdITXd0VTFUSGdYRjFBV1NLK2t3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURZeE1URXlORGN6TlZvWERUSTNNRFl4TVRFeQpORGN6TlZvd01ERXVNQ3dHQTFVRUF3d2xLaTVrWldOdmMzUmxMWEJoYm1SaExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUc4eXZ5SE1raTUKbmxBR2FvclQzcXdSNnpmaW5OaEN1UkNOTGZHTkQ3c04rQXpmbXM5aVZIVEptZENrQ2sySnBiOVNOaHFucmk5UQptOVRpdGE1N3dkTE5jd0Nub1pCRkgyZkJZek03VVVZR2c3ZnVWL3dWZUF0THFrQUVPamN2aEpBUkkrR0JTUisxCndJR0xnS1JDOXZQMjNndERaK3pMM0htNmxLSkxDYmlibzVGRlJzOUZZbUJKOEhWSTRNRXBMWWIrY1hwV3daNnAKVU9wQ2RaTVZiR3ZoWC8vWG9nRlNWSGU5UFZzNTBhYm9USHVzY3VHYnFOOXQ2QmNFOVRnOUswWVc3RFptdlFWVApMUHdER1laVjFqd1JNZWxlRkZZRHcyMURmclBzTTdNT0ZsczlYS0Jmd0ttTUVMM3g1a24rUS9zL2tDRGk0TnNTCkpmNDY5VUgvTi9zQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVSW0rVwpEdUVKRVRpeVZsa3FZRVQ5Y045WGlKc3dNQVlEVlIwUkJDa3dKNElsS2k1a1pXTnZjM1JsTFhCaGJtUmhMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFkaUNYaHQzSERXRTgKVVZrU1M4WDVUekxTem9yVEp1WURPdG0xYVVKSDZ0Z2I2Q1hVczNjSFc3Yk9qdHIwYVdrOHVpSVlSVTZvaWFMdAozZGdaeDUvU3V6T0pqYjR3bjk5LzNhYWpuaERyeC96OE9vSWk0dk1tSzd1eWF5NkFIQlZDSkZERXNKbStBSlgyCnJUQ1MxaFltVmdxcE0xUHRBNmFuZXlNS0pwL3laNm9sa3RINENWeHNWMzVaU3hnWUpIb3pMdERmR29EM25KaUwKWUh3eFBsQnl0MGFqKzVoOUV6MVdxRkkvRzlKVUV4aU5oanVrbDlTeFg3NWRmanRPajZNZkQxdWVvVWFDS256cwpvaTBwc3RoNmRNeEZ1djYrTWpGQ1Q4TmRQZWowL1hEK2JJdjJaYWtldng1bGttckl6UlAzbkVQaXZpQzIwajRBCllJL05Gc1dQeEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd2J6Sy9JY3lTTG1lVUFacWl0UGVyQkhyTitLYzJFSzVFSTB0OFkwUHV3MzRETithCnoySlVkTW1aMEtRS1RZbWx2MUkyR3FldUwxQ2IxT0sxcm52QjBzMXpBS2Voa0VVZlo4RmpNenRSUmdhRHQrNVgKL0JWNEMwdXFRQVE2TnkrRWtCRWo0WUZKSDdYQWdZdUFwRUwyOC9iZUMwTm43TXZjZWJxVW9rc0p1SnVqa1VWRwp6MFZpWUVud2RVamd3U2t0aHY1eGVsYkJucWxRNmtKMWt4VnNhK0ZmLzllaUFWSlVkNzA5V3puUnB1aE1lNnh5CjRadW8zMjNvRndUMU9EMHJSaGJzTm1hOUJWTXMvQU1aaGxYV1BCRXg2VjRVVmdQRGJVTitzK3d6c3c0V1d6MWMKb0YvQXFZd1F2ZkhtU2Y1RCt6K1FJT0xnMnhJbC9qcjFRZjgzK3dJREFRQUJBb0lCQUVBK1BvRm13NEhpSzJFVgovNVp4azFFenovQUVNVVoxT2JFSFg4ak5vZjNCTUJQMHdmMHEraDZRQzNWb01CSnVKb3crMHJvY0NHS2dORXh2CnNSZGU2bkxndGRYdHdHRjZ5bU01ZVkrdmg4L1VzVEQ0MUN3L1lrTThvQVFDWXR1UjRqOXpyNVpEck4vYkFTN3oKOTRDQXhDczZIWDlXcHN1YS9rMVBWYUpMaDdtekx0RkZTWVJ1bCtqOUtvbXVBeHFZZjQxOXc4QVRQNXlNb3hSdwowU1hGWGxhR2tBVkpYeS9zQjRRQ0lhTHlwbmlSa05qWlgxNGxvU3NCL3YxQXFGTFZsejY4OXVTa0ZiMklna3RGCndHdUV4Y0dUYWl0M3diRXBaTmhBeE9vY3BKOUZqNTdSUXNkNnFKRk8zczNCaWl2eG5Ra1JFQlk2MStWVEJjd3IKUVFwQTdNRUNnWUVBMSs0OGMyTktnK0grNmhNRit0Ri9mdzZXeTU5YXZDbzdxUkY1QmM2OFpsMjhLRGtraFF2Mwppa1U3a1RmYmlxWjRSOVhvVlB5QnhQK3VLeGhPOHpSWWZweFo2UWVUdGpZY1Jyc1VnTmRrc1RtYjJTdG5LTWh1CjlESEtiUktkdmhhN3lRbW94eTk1SEdKNmdOZUgyM0tNNFhOZytxM0cvdDh1eFEvRFNFam1wek1DZ1lFQTViQkcKR0c1NTJoMjdqVURZM3NSUlRxY3QwVk15cnY0ejVEM0QyNWZLVEN1Vm5Xb2tBWGozOEpsbFlhRXNnS05VUDRTMQpqZWROMHVkTVJhWjEzQmNNWHlYTko3cUxxT0djbGRMRUpUbkorU2t0UWNMTGpuczNLTldJMXhMa3BOOVl4VHUwCjQ0NXRpMDRBZE5pYXE2U09jakNnYTIxcmlXVzdNakxUVHd2VGpCa0NnWUJSQ0RSalVQV2J2R20vU2RoS29lZm8KdEg3ZWR6VER2RTJiU3RWUjJwMVZCUVFoVENCcVZXMVYxRmxnUzhmMXBqY3BMaHI4R2E1UlVXbjQvaXhTbEdoSgpTejlxZGM5MjU2T0EzNS80SWR6RnJVclJHcnFoMFdYaCtmVnZMVGRKS0pyYi9PWDdxZE1YVmRXSEdGc0JmV0ZsCkVibHBHV0crTDk4TFVMa0dIV1dCaFFLQmdCUWRFcFpUSGxLT1pmMGhuNXdxWHVCZlhYREdNMXNGb2Erc0JQbTIKMmgwL2Q5T1lGdDBXSmNnbzlxck0vV09xYWRkQ0hNLzNZR1pHb1BROGRuZTJnUHZZQ0pZaEROZldJZXN3ME1KZAp4Q1VRaVFrSU1PRWlReHROVDdWZHp5M3M3UTRnZzErbCtrdkhvZHlabHpuT3FEYXhzV3FXNDJMZHlMM0ZtNkdCCmJKNEpBb0dBUEhYYXZpVkZ3clEvU3NCU0x5SCtmcXBHbmtyczRJRWd0dk1HcmI0OTN3QkVFQU5TRm5EMXQ0TDUKUmVSSlY5RDNnTDVVc1RwWWllZVVXSWsySUU3YityRVUydnRiNElVOFQ4K0FzNm9zMTFUYnFPOS91eWxOeTd0dwpGdkxnRElrbnAvSHNBbzVJbS9YNmtNMXV3eitrVGdTVDg1R25scmEzVldhSjhSbEF0dXM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: default
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "true"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: decoste-panda
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"
  enable-cluster-aware-addressing: "false"
  enable-inter-cluster-snat: "false"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns
    drop
    tcp
    flow
    icmp
    httpV2
    flows-to-world
    policy
  enable-hubble-open-metrics: "true"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "192.168.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  egress-gateway-healthcheck-timeout: "2s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-k8s-endpoint-slice: "true"
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-cilium-endpoint-slice: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: default
data:
  config.yaml: |
    cluster-name: decoste-panda
    peer-service: "hubble-peer.default.svc.cluster.local:443"
    listen-address: :4245
    metrics-listen-address: ":9966"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumsrv6egresspolicies
  - ciliumsrv6vrfs
  - ciliumnodeconfigs
  - ciliumcidrgroups
  verbs:
  - list
  - watch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  - ciliumsrv6egresspolicies
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumsrv6egresspolicies
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumegressgatewaypolicies
  verbs:
  # to allow CEGP watcher
  - watch
  - list
- apiGroups:
  - cilium.io
  resources:
  - ciliumegressgatewaypolicies/status
  verbs:
  # to allow CEGPs status.groupStatus updates
  - update
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies
  verbs:
  # to allow IEGP watcher
  - watch
  - list
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies/status
  verbs:
  # to allow IEGPs status.groupStatus updates
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - isovalentfqdngroups.isovalent.com
  - isovalentegressgatewaypolicies.isovalent.com
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentfqdngroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumcidrgroups
  verbs:
  - create
  - patch
  - delete
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: default
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: default
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: default
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: default
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: default
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: default
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/hubble-relay/metrics-service.yaml
# We use a separate service from hubble-relay which can be exposed externally
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay-metrics
  namespace: default
  labels:
    k8s-app: hubble-relay
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: default
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: default
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: default
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: default
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          exec:
            command:
            - cilium
            - status
            - --brief
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - cilium
            - status
            - --brief
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "decoste-pa-decoste-panda-8dbd25-aaolp1wq.hcp.eastus.azmk8s.io"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=true --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "decoste-pa-decoste-panda-8dbd25-aaolp1wq.hcp.eastus.azmk8s.io"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "decoste-pa-decoste-panda-8dbd25-aaolp1wq.hcp.eastus.azmk8s.io"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: default
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/isovalent/operator-generic:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "decoste-pa-decoste-panda-8dbd25-aaolp1wq.hcp.eastus.azmk8s.io"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: default
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/isovalent/hubble-relay:v1.13.4-cee.1"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
            - --debug
          ports:
            - name: grpc
              containerPort: 4245
            - name: prometheus
              containerPort: 9966
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
