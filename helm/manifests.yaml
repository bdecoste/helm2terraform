---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: cilium
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-enterprise
  namespace: cilium
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium-enterprise/charts/hubble-ui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYlNkWnR0RDBEbUdJRXVPZVRXbVprREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpNeE1UZzFOVEl3V2hjTk1qY3dOek14TVRnMQpOVEl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGhvQ01EWW53K01uZk14cVZId2xTNGdyV0t6Y0FwRDR5ekQ5SG5DOTdYS1dTMjZIV2MKMXlaZGJrMDV2QXFscUZSZVVOSk9Pd3ArSTdVUEJIdWhIWXFBUzltcUtuTGRoUGRreXpFbDZDVmloaEdaZjlsKwpDbTVQY1JXekQ2ZWF5UmdDK2p3RXA1aVgvVWlLT3QrVHdNZWZOdEl2S3NqYUpFdUl3Z2dtUUVFRHhlYVR1ckphCitCOWVxZDE3K1ZRTitCRVdKcktMQk95a1pjYjlNanhRcnduZ3NuUWtFZDZPazdBTndHVmFSY2dxRTFnajY1S2sKUVZJL2hmS3paa0JmbU9JQURTaTFLVUhuamJwZXF1ckRiNFg3eXNTRTVXaWUyZFprTFFYNFV2Nm4rcHB2ZzVzaAp1YmNFMDN5dXBTaTlUc0hPaFBMRW9DNnNaNnZWVE5XcU5TeHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVab1NkeFh4dDR3cTF3RlA2MDI5bXlYS01TUDh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMSEQ5RFplc25ERnM5c2pGRTJNTGFpeXp2RDdmOEUwZmE1MUFGNUk5UzluZjZ2ZldRRStBbTV1ClV6YkNybFBCdGhjMm1HZml3dEYxOTZxdUYrTndXa2xDV2s0K3FzbWR1dDVDcnZML3hIZUE0dlVjaDNEOHB2WWoKeTF5ZFB4VlREb0FuMEk3eEpDNElLSHlla2ZMNlJkWFhkc3Nwb0QyU2lYRGdmUzNvY2xBaFFQM3JlaGF5MnpXYwp2blc5NXVrdy9XMXNuSEd5ZUtYbHY1Uk42N3ZidzZHbE5YcGhWTWxMTVFtNjhtRGRVdERPbUVBYWk3S0hrcVo2ClZhemd4dDR3QnZuRFBScmxMQ3JpNW5ZcEgrd2taLys4RVNQZExjK2hpR1R5YmtTem1UMVgwMEtBWWx0VS9iczkKMnN4eHBzcW9yU0lrQ2tpUUZ0QU9uUFoyV0dDVUMxMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNGFBakEySjhQakozek1hbFI4SlV1SUsxaXMzQUtRK01zdy9SNXd2ZTF5bGt0dWgxCm5OY21YVzVOT2J3S3BhaFVYbERTVGpzS2ZpTzFEd1I3b1IyS2dFdlpxaXB5M1lUM1pNc3hKZWdsWW9ZUm1YL1oKZmdwdVQzRVZzdytubXNrWUF2bzhCS2VZbC8xSWlqcmZrOERIbnpiU0x5ckkyaVJMaU1JSUprQkJBOFhtazdxeQpXdmdmWHFuZGUvbFVEZmdSRmlheWl3VHNwR1hHL1RJOFVLOEo0TEowSkJIZWpwT3dEY0JsV2tYSUtoTllJK3VTCnBFRlNQNFh5czJaQVg1amlBQTBvdFNsQjU0MjZYcXJxdzIrRis4ckVoT1ZvbnRuV1pDMEYrRkwrcC9xYWI0T2IKSWJtM0JOTjhycVVvdlU3QnpvVHl4S0F1ckdlcjFVelZxalVzY1FJREFRQUJBb0lCQUE2R1c1cXRMV2hub1ZTNgplUXRzbEQyb2xIMVNENHZWSjI2amx4U3pxKzNZQ1ZiSkVrRTlqSWU1UVJsMVpJNFRqeExmU3hxa0xHSEFkTGg1CnhtZXgyaWUyT2xYOUU1WDFLR1FCdkxFL0I2RVhGbXoyVVE4UEp0alFZK0E2SXNVUkt3Mk9CRzBjU1BPSDU3S1cKWmF4Q1hkZC9GUHJhVzBISDBtRUVkTGZaclJYTCtiMGRoemhCeVU4UkdRbWpUaDA2VjFheCszbTdQYk5yYStMRgo5dkpUOUpNemVHQUpTUzRzRzFSZDg1cnA5UEx0MmZnbWVQeFA2V2lUaGRXZldFeFg1S01mTkhtYytHZzhaMHFJCjRVdFA1ZGxGdWphWVpXaGVwbE9Zb3R2cnN0TUdiYTc5dmMwMStuTEQ1YVEzbXQyUXNLVlluV2t5QXlmQThvajEKajNOc1BNMENnWUVBNklndnYydVNENWp1WStqNFRqbXRYRUNIMWd3bThnYzVCZ01UQ00xVmxxb1AxeWdLZ2N4Mwp6T0lUOFN6bmNXSUViV3VoMklYT1JCdEk5Uys2VkxJS0JuWWZMU2FrTG00amZ2b3VGMWxDc01FM0lmOHVYZXVoCkpvRkRqdks2dW5uOFhNcmNGWVdHMFk2UExuUnQwbWp3Qzd3SHpjeWpxZGIvWmNubHVYMFZ1VWNDZ1lFQStHV0QKQ2w2dWVnYzlZVUlwQmtoSHdteVJVZDB0Z0Y1ZHBFTzd0TnhQSkFUdjhVdkhzcllFUU5RWk1MWXB2VldDc2tvUgo5SytvYUhZWXpTVXZhaGJEQ3E5Qmo0QWN0WGpDVGVjdGFLdXlFbUc5V2cyb1BIaGNRMElPb2dJNVFwNXA5ak1wCk5BQlVwMmR3d2Y1dStVelA3R0J4c09kR09LTHF4ak92NWcxM3lJY0NnWUJybVlrdXRLSXo0WHArZFBGaGtVTHQKSzFjdjd4T2ViMFV0eVFKbjBreEdtWThXNm9waUliRlY5MDl2REc1VWd4eTFYVmJaRUtHdjFraGVYS1dHUjVSbwpCUVRNS2ROVFFOZmdDL2lFQ1dQWTBxK21aYVNaQlUzZXVYWC9rY1ppUDh4TlMvbW5ZOUJNN0FESmFFcmhVSG16CmxHQ3dGSCt2T2JPWThHSURBU1NxUlFLQmdRRGVoV0hNNm1EM1pJRHlIZWpPZmZYN0VITm1tUE5vS2lGTlJIaGwKWDI5dVh4WHNYZXk2QmlEdFNwUitkTklUa1FVU1h4U1MxTUhUUXVpWTdwVDVQd2JmRFgxMzVsYlJveXE5eXpsOApxVU5QQUV3MjNrRTJXc1NjWkJManc0WTBUZUd5OHNZWWxhdEFoSVFZNWF2WW5aMHVybjlxOE9TUlhERmgrVys4CmNaZzdCUUtCZ0FpQUQ3R1E0TE5aMjdEZDhXc3BFWFZDRjB4YkZZREVWNVRSTDNFR2hmaUpJbFhNdDJXTEN0WkUKL2VlQ2VhZmd4Um9lZjA3RTFLOVJiTGZMMVh0OVBMNThtamxEb2RMZ0dMWnJLQ2pEZWxkV2tnVkJYcmdxMnZPYQpXVDArVHh0NXFxclNtalg2ZDdQZm0xVnRXaUVYVTdvSFJLenpJbmQ4WFBBT3RlVTAwSjVXCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYlNkWnR0RDBEbUdJRXVPZVRXbVprREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpNeE1UZzFOVEl3V2hjTk1qY3dOek14TVRnMQpOVEl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGhvQ01EWW53K01uZk14cVZId2xTNGdyV0t6Y0FwRDR5ekQ5SG5DOTdYS1dTMjZIV2MKMXlaZGJrMDV2QXFscUZSZVVOSk9Pd3ArSTdVUEJIdWhIWXFBUzltcUtuTGRoUGRreXpFbDZDVmloaEdaZjlsKwpDbTVQY1JXekQ2ZWF5UmdDK2p3RXA1aVgvVWlLT3QrVHdNZWZOdEl2S3NqYUpFdUl3Z2dtUUVFRHhlYVR1ckphCitCOWVxZDE3K1ZRTitCRVdKcktMQk95a1pjYjlNanhRcnduZ3NuUWtFZDZPazdBTndHVmFSY2dxRTFnajY1S2sKUVZJL2hmS3paa0JmbU9JQURTaTFLVUhuamJwZXF1ckRiNFg3eXNTRTVXaWUyZFprTFFYNFV2Nm4rcHB2ZzVzaAp1YmNFMDN5dXBTaTlUc0hPaFBMRW9DNnNaNnZWVE5XcU5TeHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVab1NkeFh4dDR3cTF3RlA2MDI5bXlYS01TUDh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMSEQ5RFplc25ERnM5c2pGRTJNTGFpeXp2RDdmOEUwZmE1MUFGNUk5UzluZjZ2ZldRRStBbTV1ClV6YkNybFBCdGhjMm1HZml3dEYxOTZxdUYrTndXa2xDV2s0K3FzbWR1dDVDcnZML3hIZUE0dlVjaDNEOHB2WWoKeTF5ZFB4VlREb0FuMEk3eEpDNElLSHlla2ZMNlJkWFhkc3Nwb0QyU2lYRGdmUzNvY2xBaFFQM3JlaGF5MnpXYwp2blc5NXVrdy9XMXNuSEd5ZUtYbHY1Uk42N3ZidzZHbE5YcGhWTWxMTVFtNjhtRGRVdERPbUVBYWk3S0hrcVo2ClZhemd4dDR3QnZuRFBScmxMQ3JpNW5ZcEgrd2taLys4RVNQZExjK2hpR1R5YmtTem1UMVgwMEtBWWx0VS9iczkKMnN4eHBzcW9yU0lrQ2tpUUZ0QU9uUFoyV0dDVUMxMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNGFBakEySjhQakozek1hbFI4SlV1SUsxaXMzQUtRK01zdy9SNXd2ZTF5bGt0dWgxCm5OY21YVzVOT2J3S3BhaFVYbERTVGpzS2ZpTzFEd1I3b1IyS2dFdlpxaXB5M1lUM1pNc3hKZWdsWW9ZUm1YL1oKZmdwdVQzRVZzdytubXNrWUF2bzhCS2VZbC8xSWlqcmZrOERIbnpiU0x5ckkyaVJMaU1JSUprQkJBOFhtazdxeQpXdmdmWHFuZGUvbFVEZmdSRmlheWl3VHNwR1hHL1RJOFVLOEo0TEowSkJIZWpwT3dEY0JsV2tYSUtoTllJK3VTCnBFRlNQNFh5czJaQVg1amlBQTBvdFNsQjU0MjZYcXJxdzIrRis4ckVoT1ZvbnRuV1pDMEYrRkwrcC9xYWI0T2IKSWJtM0JOTjhycVVvdlU3QnpvVHl4S0F1ckdlcjFVelZxalVzY1FJREFRQUJBb0lCQUE2R1c1cXRMV2hub1ZTNgplUXRzbEQyb2xIMVNENHZWSjI2amx4U3pxKzNZQ1ZiSkVrRTlqSWU1UVJsMVpJNFRqeExmU3hxa0xHSEFkTGg1CnhtZXgyaWUyT2xYOUU1WDFLR1FCdkxFL0I2RVhGbXoyVVE4UEp0alFZK0E2SXNVUkt3Mk9CRzBjU1BPSDU3S1cKWmF4Q1hkZC9GUHJhVzBISDBtRUVkTGZaclJYTCtiMGRoemhCeVU4UkdRbWpUaDA2VjFheCszbTdQYk5yYStMRgo5dkpUOUpNemVHQUpTUzRzRzFSZDg1cnA5UEx0MmZnbWVQeFA2V2lUaGRXZldFeFg1S01mTkhtYytHZzhaMHFJCjRVdFA1ZGxGdWphWVpXaGVwbE9Zb3R2cnN0TUdiYTc5dmMwMStuTEQ1YVEzbXQyUXNLVlluV2t5QXlmQThvajEKajNOc1BNMENnWUVBNklndnYydVNENWp1WStqNFRqbXRYRUNIMWd3bThnYzVCZ01UQ00xVmxxb1AxeWdLZ2N4Mwp6T0lUOFN6bmNXSUViV3VoMklYT1JCdEk5Uys2VkxJS0JuWWZMU2FrTG00amZ2b3VGMWxDc01FM0lmOHVYZXVoCkpvRkRqdks2dW5uOFhNcmNGWVdHMFk2UExuUnQwbWp3Qzd3SHpjeWpxZGIvWmNubHVYMFZ1VWNDZ1lFQStHV0QKQ2w2dWVnYzlZVUlwQmtoSHdteVJVZDB0Z0Y1ZHBFTzd0TnhQSkFUdjhVdkhzcllFUU5RWk1MWXB2VldDc2tvUgo5SytvYUhZWXpTVXZhaGJEQ3E5Qmo0QWN0WGpDVGVjdGFLdXlFbUc5V2cyb1BIaGNRMElPb2dJNVFwNXA5ak1wCk5BQlVwMmR3d2Y1dStVelA3R0J4c09kR09LTHF4ak92NWcxM3lJY0NnWUJybVlrdXRLSXo0WHArZFBGaGtVTHQKSzFjdjd4T2ViMFV0eVFKbjBreEdtWThXNm9waUliRlY5MDl2REc1VWd4eTFYVmJaRUtHdjFraGVYS1dHUjVSbwpCUVRNS2ROVFFOZmdDL2lFQ1dQWTBxK21aYVNaQlUzZXVYWC9rY1ppUDh4TlMvbW5ZOUJNN0FESmFFcmhVSG16CmxHQ3dGSCt2T2JPWThHSURBU1NxUlFLQmdRRGVoV0hNNm1EM1pJRHlIZWpPZmZYN0VITm1tUE5vS2lGTlJIaGwKWDI5dVh4WHNYZXk2QmlEdFNwUitkTklUa1FVU1h4U1MxTUhUUXVpWTdwVDVQd2JmRFgxMzVsYlJveXE5eXpsOApxVU5QQUV3MjNrRTJXc1NjWkJManc0WTBUZUd5OHNZWWxhdEFoSVFZNWF2WW5aMHVybjlxOE9TUlhERmgrVys4CmNaZzdCUUtCZ0FpQUQ3R1E0TE5aMjdEZDhXc3BFWFZDRjB4YkZZREVWNVRSTDNFR2hmaUpJbFhNdDJXTEN0WkUKL2VlQ2VhZmd4Um9lZjA3RTFLOVJiTGZMMVh0OVBMNThtamxEb2RMZ0dMWnJLQ2pEZWxkV2tnVkJYcmdxMnZPYQpXVDArVHh0NXFxclNtalg2ZDdQZm0xVnRXaUVYVTdvSFJLenpJbmQ4WFBBT3RlVTAwSjVXCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYlNkWnR0RDBEbUdJRXVPZVRXbVprREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpNeE1UZzFOVEl3V2hjTk1qY3dOek14TVRnMQpOVEl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGhvQ01EWW53K01uZk14cVZId2xTNGdyV0t6Y0FwRDR5ekQ5SG5DOTdYS1dTMjZIV2MKMXlaZGJrMDV2QXFscUZSZVVOSk9Pd3ArSTdVUEJIdWhIWXFBUzltcUtuTGRoUGRreXpFbDZDVmloaEdaZjlsKwpDbTVQY1JXekQ2ZWF5UmdDK2p3RXA1aVgvVWlLT3QrVHdNZWZOdEl2S3NqYUpFdUl3Z2dtUUVFRHhlYVR1ckphCitCOWVxZDE3K1ZRTitCRVdKcktMQk95a1pjYjlNanhRcnduZ3NuUWtFZDZPazdBTndHVmFSY2dxRTFnajY1S2sKUVZJL2hmS3paa0JmbU9JQURTaTFLVUhuamJwZXF1ckRiNFg3eXNTRTVXaWUyZFprTFFYNFV2Nm4rcHB2ZzVzaAp1YmNFMDN5dXBTaTlUc0hPaFBMRW9DNnNaNnZWVE5XcU5TeHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVab1NkeFh4dDR3cTF3RlA2MDI5bXlYS01TUDh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMSEQ5RFplc25ERnM5c2pGRTJNTGFpeXp2RDdmOEUwZmE1MUFGNUk5UzluZjZ2ZldRRStBbTV1ClV6YkNybFBCdGhjMm1HZml3dEYxOTZxdUYrTndXa2xDV2s0K3FzbWR1dDVDcnZML3hIZUE0dlVjaDNEOHB2WWoKeTF5ZFB4VlREb0FuMEk3eEpDNElLSHlla2ZMNlJkWFhkc3Nwb0QyU2lYRGdmUzNvY2xBaFFQM3JlaGF5MnpXYwp2blc5NXVrdy9XMXNuSEd5ZUtYbHY1Uk42N3ZidzZHbE5YcGhWTWxMTVFtNjhtRGRVdERPbUVBYWk3S0hrcVo2ClZhemd4dDR3QnZuRFBScmxMQ3JpNW5ZcEgrd2taLys4RVNQZExjK2hpR1R5YmtTem1UMVgwMEtBWWx0VS9iczkKMnN4eHBzcW9yU0lrQ2tpUUZ0QU9uUFoyV0dDVUMxMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRTU5rU244cXBtVWhaWVFIaDFMNVVGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpNeE1UZzFOVEl3V2hjTk1qY3dOek14TVRnMQpOVEl3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdE1JaFppWGtzU2xtL1hhVDBEeExYWUZGR2FjOXoKamxNc3kzTHVkLzd3YjA3a1I5L3gzQVZGQXNZR3FOcUpNSFpHekpUTE9OL0N1dkYwbzd0c0Z5MlFFN2xxd1pUQQo3eUVqaGFDRzV4ek1LT1R6T2RvOHpPNUc4MHFmNHVXQzlxOUNvZXRET01XN09iRkZPZXRLOFljcmFHYXcrTVJWCmZrMlZNem4yc2s0L01GLzAxSHlCdUJkR2ljVHRCKzlIZWJrL3VkaWVndk05Sy9obG5YdXh4LzFSZFNGKzVMVjMKVTlObXdVL2RRU1JlYUNDSTh0N1VCQXM2TjZYVGFkbEZOcWtDVWt5N1NDQjNWYVU2UU51dmJkeFY2YVNaZHFDeApPeFpudDZGTVdBTmNTaFEya3laSjlUWmRzek1JN1J1NjUrK3VaZURGci9la0gxSlRSYWp4S3VMSEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZHYUVuY1Y4YmVNS3RjQlQrdE52WnNseQpqRWovTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUF5YytVUU9UWTIvRytMdmhKUHZ6d0Q5WC94REtEdlRDTTJ2OGE5SUR0dHZVajFLQnIKdm5lMVRZQ2ZoUXd0MU1OVGN0RTYrQjhhYm1jNzdLU29MTzlPSmhFUGFFOTN3bGdiWHV2MEFibkprYmNObFFaZwpVZXdTTWdrWDVGT2xTaUdqYU5ZTTVPdlRtdW53TWFIVVVZMXlzN1JxU1hkdHZyUXNHb2oycG9qT2hvL1BGMWVZCjhaS3c4TkNyWWFCeitVbFhJUmZGaXJvd3E0bXlFTXZSc1NCTE1CTzRpaXFDWVdoemtoNW40T05RQUhoQUVqU3YKWnhubDRBeEFCNTZVazZaQ2ExZnlxMkZmNFlQY0ZpK3BHdzRMZm1IWFBKbDV3d2NYdHVid3NkWTRVczNvckJZNwpGbnd3S09kU1JNVkVuakgyeStIb1E0WEk5VzloRndHZ2xEZkcvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBclRDSVdZbDVMRXBadjEyazlBOFMxMkJSUm1uUGM0NVRMTXR5N25mKzhHOU81RWZmCjhkd0ZSUUxHQnFqYWlUQjJSc3lVeXpqZndycnhkS083YkJjdGtCTzVhc0dVd084aEk0V2dodWNjekNqazh6bmEKUE16dVJ2TktuK0xsZ3ZhdlFxSHJRempGdXpteFJUbnJTdkdISzJobXNQakVWWDVObFRNNTlySk9QekJmOU5SOApnYmdYUm9uRTdRZnZSM201UDduWW5vTHpQU3Y0WloxN3NjZjlVWFVoZnVTMWQxUFRac0ZQM1VFa1htZ2dpUExlCjFBUUxPamVsMDJuWlJUYXBBbEpNdTBnZ2QxV2xPa0RicjIzY1ZlbWttWGFnc1RzV1o3ZWhURmdEWEVvVU5wTW0KU2ZVMlhiTXpDTzBidXVmdnJtWGd4YS8zcEI5U1UwV284U3JpeHdJREFRQUJBb0lCQUFaZHQxVmJPVW9JZlo0TQpLaWtTZU1YVDg0amNFTlVWa1RjZlQxMDJxZmRha0JMU0ZZaEZaeWd2UHVvMXdMcTBQbFRCNW1KRjkrdW5oWUtkCkZpR1dCSVc4UTkrSnVCY1RjeXRrR1E5OFpWR1gyenFaa00wVlYxamlUb2JzQnpXMkxhRU1aS0oyN3NYQURDVVkKU083YlMvV3JnOExUa2h2MlpaR3JiV0VGRXQwOXNYeXl5bWsrRkRLdmdjVkx3WUZuYUovTjNpcWN1UWVLZEhNOQp0RFcrdUVzNkhLNWMzM2pMUnowdUQydzg1djZKbzJ1aEtjMnJwSVU2Sk0rVW5GT2xNelYwTWNMSDhRWm9RdTFtCmlDMy9DSnYrR0kveXUwejc2QTV6L1pkMEVYUVgzN3lrZHdmMDUrNmYrbnRVSE14ZnVTRDhqc01oRlZkZGxSK24Kc3JQN3I1a0NnWUVBekhJUm0vSzZjL1BpUHNuQWZzRG9mMDlZdFhKalJ2UlZ1ekZtTStoMmNGL1A3eXZLWnFSVgprN2hsRGMxRmFjZW82aXNOMGNzUW5KdC8zSEt3RGdmOFQzUCtJM2QrblRZaWFZR2dXT1JsYUtOTS9qOEFYb3hZCjJ5cjMxZUkvdjZaQWMxV0NqaFRzOVRjTTYwVGdPbm9CNnNvN3NhN3B2b1F5N2xXQ2l3YS9oZTBDZ1lFQTJOeTkKcUkwOUNJUGpUZkZpSWt1WSt4eWtGdWFIcEM0Y3NpR2FSa0E5ZGpWTGhCbkQ3ZkZwazNwZEMwMTZZRGJUYUdQLwpDbVZiVjVMYUFEM1RNNnh2U1hDakdIb2ZMM3B5dnYrUXVMaWdQcXJIaGUvWC82YUNSRmFSUG8vYks1SXd3TStkCmluUXBoenRHYWtVMWtTNlFvZUZVTDhLRkl4UlpLRDVKTUhDemRRTUNnWUE0bnFhdHo4MC9hNTJPMGdVVGxZMU8KSk1WbWl1VmZzeTlEQm0xTmx1V21QWUt5dENmN3dTdEtHOWt3dDFhdjh2R2UySW1kUG1XOVdYdFJyQm1CNlVoQgpJTmlUTGZiTXh6OUVoUGZKWm9lSE1TS1RqeE1sSEMxSGxXREp4VHp1Y0xhTXVuUExzWlBtWFhhZ2VaUzMzUzVHCnZmZEdRRERQNklES2JMZ1lsS2ZhQ1FLQmdHNENCQitsamdsc3hmaTY4eG9NbVUwQTZXaEloeFJNNC9la3ZoclcKNlphMlVGbHhySWRlaUR6c3ZKaElORVRzYXUrd2tpYlc1YkFWNllwbjBtU0xHMlQ0dzNOZU44V2c2dVppeENwQQpWZUdVUm1SMkYyOHpLeSs1YmpKN1RTWGNJZWtkS0lDY2pwaHdCRGRTWm1zQVlSUU5OdVNIVzN4QkRUMHg0M1MwCkp3UzdBb0dBYnUrVElVU2ZIblRHN2tHOWwwcHYySXdDUU1TOU40RUI3UlZkRkh1WXE1L3dqZ09xYkw3NnpuUHgKNThLNXZpTVVCSTJJZWFsaGpWeDNiL01CMXZlTTFnc0xnczNvVU03LzdlcGZtVGdtZU4wT0dDY0o3RXRyN0JzcQpKbUFMRUxBdkFZUW5HdDNENmZVd1N5WXNUTmVyNkNjMExvZWhGQzE2c3dvR2pWeWRvNzQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYlNkWnR0RDBEbUdJRXVPZVRXbVprREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpNeE1UZzFOVEl3V2hjTk1qY3dOek14TVRnMQpOVEl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGhvQ01EWW53K01uZk14cVZId2xTNGdyV0t6Y0FwRDR5ekQ5SG5DOTdYS1dTMjZIV2MKMXlaZGJrMDV2QXFscUZSZVVOSk9Pd3ArSTdVUEJIdWhIWXFBUzltcUtuTGRoUGRreXpFbDZDVmloaEdaZjlsKwpDbTVQY1JXekQ2ZWF5UmdDK2p3RXA1aVgvVWlLT3QrVHdNZWZOdEl2S3NqYUpFdUl3Z2dtUUVFRHhlYVR1ckphCitCOWVxZDE3K1ZRTitCRVdKcktMQk95a1pjYjlNanhRcnduZ3NuUWtFZDZPazdBTndHVmFSY2dxRTFnajY1S2sKUVZJL2hmS3paa0JmbU9JQURTaTFLVUhuamJwZXF1ckRiNFg3eXNTRTVXaWUyZFprTFFYNFV2Nm4rcHB2ZzVzaAp1YmNFMDN5dXBTaTlUc0hPaFBMRW9DNnNaNnZWVE5XcU5TeHhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVab1NkeFh4dDR3cTF3RlA2MDI5bXlYS01TUDh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMSEQ5RFplc25ERnM5c2pGRTJNTGFpeXp2RDdmOEUwZmE1MUFGNUk5UzluZjZ2ZldRRStBbTV1ClV6YkNybFBCdGhjMm1HZml3dEYxOTZxdUYrTndXa2xDV2s0K3FzbWR1dDVDcnZML3hIZUE0dlVjaDNEOHB2WWoKeTF5ZFB4VlREb0FuMEk3eEpDNElLSHlla2ZMNlJkWFhkc3Nwb0QyU2lYRGdmUzNvY2xBaFFQM3JlaGF5MnpXYwp2blc5NXVrdy9XMXNuSEd5ZUtYbHY1Uk42N3ZidzZHbE5YcGhWTWxMTVFtNjhtRGRVdERPbUVBYWk3S0hrcVo2ClZhemd4dDR3QnZuRFBScmxMQ3JpNW5ZcEgrd2taLys4RVNQZExjK2hpR1R5YmtTem1UMVgwMEtBWWx0VS9iczkKMnN4eHBzcW9yU0lrQ2tpUUZ0QU9uUFoyV0dDVUMxMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRTFAwdWQ5UTc1Mi84cEN5Y1pjNTJmekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3TnpNeE1UZzFOVEl3V2hjTk1qY3dOek14TVRnMQpOVEl3V2pBd01TNHdMQVlEVlFRRERDVXFMbVJsWTI5emRHVXRjR0Z1WkdFdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE1YkJpSE9ubjc2OFEKb3FUdXNxUXJyQ1lKcitwMUoxU3V4N1NrS1VZTGtoaWxHanczSk9UYTlNYURNRTVtUlJYa09YNHR0OE1UZFFxdwpJcG1tdUdwTzhZZm5uTmRlNktyeEtXQWx4bVNZWEhYUHAvdm56OWszUnJhVGorVER6WW5kaU04SHZRVGxVTjhjCnNzNWZwQkVjZ0JHQjBRdzFWREFnRUxhbHJoYTRHOEF0aDRSWGIyMHF2VjJ6ZXgydEVTaVJRaVMxVkV1a0FqN0IKODEyL0N1SE41Qk5VK0NPWS9nemEyNGtLN2hqWmRXZmY2bkw5aUxRMldLbFpiMTRONXFNdG5GM1ZSWGt5YlljagoxZmZ4Yk9OVjE2SzNEZDh2RmNaazlSZU8yNlVhbUl2amlEZk9hRUF4N2dxUFV2cDZQWE42Ti9sUEZvTE5icTdpCjgrV0NUNlV3clFJREFRQUJvNEdUTUlHUU1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3IKQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlJtaEozRgpmRzNqQ3JYQVUvclRiMmJKY294SS96QXdCZ05WSFJFRUtUQW5naVVxTG1SbFkyOXpkR1V0Y0dGdVpHRXVhSFZpCllteGxMV2R5Y0dNdVkybHNhWFZ0TG1sdk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRREdzTUkzTlFpRDdNWngKeWJQd0l6WnIzTlFTSmVuMnhFV1ZIbjZ0MExXRHdtT2FUSEhwdU5zejFqK2Q4dmVWdlpYODhXbTA0Yjh0WTFkRgpPcUk2emE4YnllWjh3b1pBYzBPaHJReDBXSzY2K2JpY21kNWtjY3R4VEhPeDFMNjYzZEZTUlBCcFBZdnVlc3M2CldwK25TOW0vVEwwRkZWQUlRUWU0UVljUkI1YVZwdTUyYXFpUllHQXdBcDlEY2hVT3lVVVRpdUtiSXhkZ214Zm4Ka0VPTFlDYklmZXowUTBQMlNjaUx1UlM5RFNXTFFUWkZPSXdidWpEc0RvSVRqdkxCRUc1NEI3Yll4bkI1Q2IxQwo4M3RWK3l4MzJaQVpMWkltMm9BSHozYVYwRndkdXdkcUV4NTZDanltYVduQjlBVXluZTEzbkE1SFA5ODRicnFzCmU5cXIvYXlNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNWJCaUhPbm43NjhRb3FUdXNxUXJyQ1lKcitwMUoxU3V4N1NrS1VZTGtoaWxHanczCkpPVGE5TWFETUU1bVJSWGtPWDR0dDhNVGRRcXdJcG1tdUdwTzhZZm5uTmRlNktyeEtXQWx4bVNZWEhYUHAvdm4KejlrM1JyYVRqK1REelluZGlNOEh2UVRsVU44Y3NzNWZwQkVjZ0JHQjBRdzFWREFnRUxhbHJoYTRHOEF0aDRSWApiMjBxdlYyemV4MnRFU2lSUWlTMVZFdWtBajdCODEyL0N1SE41Qk5VK0NPWS9nemEyNGtLN2hqWmRXZmY2bkw5CmlMUTJXS2xaYjE0TjVxTXRuRjNWUlhreWJZY2oxZmZ4Yk9OVjE2SzNEZDh2RmNaazlSZU8yNlVhbUl2amlEZk8KYUVBeDdncVBVdnA2UFhONk4vbFBGb0xOYnE3aTgrV0NUNlV3clFJREFRQUJBb0lCQUNuZTlKUEd4Q1E2YXJMcgpsQ1AycjR0clI3ck01OXhxb0k0QlRTZkZBQmo2NnlZVU1nMUV0dkdHT3FZVXRLb0ZhcHhjZHlNWHFiVmRaR3g2ClRCMDBLLzMxdzNBaEJza3RXRmN0a3RWT3cwT2ZxbUk2RnJFYUxPeDBIZ1JPTksrRVlXRXVOSC90bzR3UmtCNjgKWmt6M1haV3ZHMVlyZnBGQlVLY2JWS3FlczZOREZkOWpxaHVFenkvclNPdEp1UmJ4bjdDZkpCRnVtR01aWHdGZgpnY21Rei96cmN6ZnFmZVNXNUdIUUFIMW5zYjlvWGVFemZYanFYZEFURjZTUTBwNm4zMHJ4N3RuQWNHRm5Sd1FPCkVLai9qN2hvbzdaR1RnWC9IVzllWW9RaklpbVpCRk01U1dndmtZbnh4NVZQQ1czQzNnMXJzYjJ2d2xjR0VmV04KTmZmSEMyRUNnWUVBNzhHZlZZZTRZZWNXM29JSnk3a0hWenlzNzB4U0tzMmptbDdjUEFva1NFUElpcE9hUHBnMApmTWNjVW1jNU9LVTJLMFZyOGhrYlk1Y1hDUjV5RnoyT3VHWGRzRWozVjAyNldYdzNvOEpRalJjTGphSnRIbHgzCjV4aGsxWnF0blhuUnNHU3lscmpaUFNFSXBEM3ZkNmE3UVlaMU9oZ1pMc2dETUZ6dWt5a1AyZ1VDZ1lFQTlVQW0Kckd6TUQ4VDVaUXJaWDdEVGlXS2o2LzAvRGRDbVZuaFJNQzZseWhLazAvYVRDdXQwQlZwV0FDeGJtMjdDT3kzQQpZZGlqN2NSeDVqWk1WN0tQM05ldFRDOVVCTWlZYnRNWWw3M1BtbEdMQW5HdVJZUVRtU3dpci9GZWpRWjlDOFU1ClpFODc1RlZJVnpvdmttVnR6bHlVdE9jUkdhYjd1MEUweVIzR3RJa0NnWUVBcUJ1YkhOMk02eGlkY0dhOWQ1ckYKQ3VZQVc4bW4wMXRjMjJDb0MzRVEvNXFIZ3FMOEErZTA1Y2kya3hETmptcEpFUTRjSWlSNGo5dmd5d1FOK3oydQpWSjBZVkFMVmF1R1ZTQ2xRMmdIbGVRZ3ZrWi9SNHZmekdwYUFIVVhYZGhOMGM3b25mb2NkeXo3ZVVFc2RIVWhMCkJDYkRDM2phTDNNT3lWcGY3YzljemdFQ2dZQWxIbHQ4RjA5ZlI2R3pjRXZzRnJnOWYrZHRiVHZnM0dhQWlkOUgKMnBlUEdQbEhkM2RUM01VSGxsK1QwU0xnU0lndktzS0dUS0txOXVPQ1EwK1VxbHJwd3Q3Z3UvME1hRXZoNGlORAp2Qit5cklyTWlPWW1jVklDQ2RNS0xBN3lhenY3enhMYm9yNWUxYVdJUmk4ekNoVHZlY1dzQjVqbitBVDdsMmZrCjFKUGhlUUtCZ1FDUmJJZVQxVkNhci85alRpcUZvejFPb3ZoajJ3VUdwekpWVzBkTDdoMjJmRy9JOCswN3AvOWYKUndUaTFPalViY1Z4ZEpkSXNubkdiUG4wSjEzYVRpU1djM1lnOFMyc3hiYUREb1FxZHVmT1NJSjZkRVlUaXFuRgo2WHQwdkFjamE1UUx2TlN0cWE5NFV0RVJQbHErTTJuSUFvSHdleTliODg5SmI1L2s5S2p3WHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: cilium
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "true"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: decoste-panda
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"
  enable-cluster-aware-addressing: "false"
  enable-inter-cluster-snat: "false"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "true"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;sourceContext=workload-name;destinationContext=workload-name
    drop:sourceContext=identity;destinationContext=identity;labelsContext=source_workload,destination_workload
    tcp
    flow
    port-distribution
    http
    flows-to-world
    policy
  enable-hubble-open-metrics: "true"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "192.168.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  egress-gateway-healthcheck-timeout: "2s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-k8s-endpoint-slice: "true"
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-cilium-endpoint-slice: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium-enterprise/charts/cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: cilium
data:
  config.yaml: |
    cluster-name: decoste-panda
    peer-service: "hubble-peer.cilium.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 15s
    retry-timeout: 15s
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/fgs_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-enterprise-config
  namespace: cilium
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  procfs: /procRoot
  tlstc: "false"
  enable-process-cred: "false"
  enable-process-ns: "false"
  process-cache-size: "65536"
  export-filename: /var/run/cilium/hubble/fgs.log
  export-file-max-size-mb: "10"
  export-file-max-backups: "5"
  export-file-compress: "false"
  export-allowlist: |-
    {"event_set":["PROCESS_CONNECT", "PROCESS_EXEC", "PROCESS_HTTP", "PROCESS_KPROBE", "PROCESS_LISTEN", "PROCESS_TLS"]}
  export-denylist: |-
    {"health_check":true}
    {"namespace":["", "cilium", "kube-system"]}
  export-rate-limit: "-1"
  enable-k8s-api: "true"
  enable-cilium-api: "true"
  cilium-bpf: /sys/fs/bpf/tc/globals/
  metrics-server: :2112
  server-address: localhost:54321
  gops-address: localhost:8118
---
# Source: cilium-enterprise/charts/hubble-ui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: cilium
data:
  nginx.conf: "server {\n    listen       8081;\n    server_name  localhost;\n\n    client_max_body_size 1G;\n    proxy_buffers 256 512k;\n    proxy_buffer_size 512k;\n    subrequest_output_buffer_size 8k;\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n            proxy_read_timeout 96000s;\n            proxy_send_timeout 96000s;\n            proxy_socket_keepalive on;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            rewrite  ^/(.*)  /$1 break;\n            proxy_pass http://localhost:8082;\n        }\n    }\n}\nserver {\n    listen       8082;\n    server_name  localhost;\n\n    root /app;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n}"
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumsrv6egresspolicies
  - ciliumsrv6vrfs
  - ciliumnodeconfigs
  - ciliumcidrgroups
  verbs:
  - list
  - watch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  - ciliumsrv6egresspolicies
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumsrv6egresspolicies
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumegressgatewaypolicies
  verbs:
  # to allow CEGP watcher
  - watch
  - list
- apiGroups:
  - cilium.io
  resources:
  - ciliumegressgatewaypolicies/status
  verbs:
  # to allow CEGPs status.groupStatus updates
  - update
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies
  verbs:
  # to allow IEGP watcher
  - watch
  - list
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies/status
  verbs:
  # to allow IEGPs status.groupStatus updates
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - isovalentfqdngroups.isovalent.com
  - isovalentegressgatewaypolicies.isovalent.com
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentfqdngroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumcidrgroups
  verbs:
  - create
  - patch
  - delete
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-enterprise
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
      - isovalent.com
    resources:
      - tracingpolicies
      - tracingpoliciesnamespaced
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    resourceNames:
      - tracingpolicies.cilium.io
      - tracingpoliciesnamespaced.cilium.io
      - tracingpolicies.isovalent.com
    verbs:
      - update
---
# Source: cilium-enterprise/charts/hubble-ui/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/clusterrolebinding.yml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-enterprise
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-enterprise
subjects:
  - kind: ServiceAccount
    namespace: cilium
    name: hubble-enterprise
---
# Source: cilium-enterprise/charts/hubble-ui/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: cilium
  name: "hubble-ui"
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: cilium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium-enterprise/charts/cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: cilium
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  name: hubble-enterprise
  namespace: cilium
spec:
  ports:
    - name: metrics
      port: 2112
      protocol: TCP
      targetPort: 2112
  selector:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  type: ClusterIP
---
# Source: cilium-enterprise/charts/hubble-ui/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: cilium
spec:
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          exec:
            command:
            - cilium
            - status
            - --brief
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - cilium
            - status
            - --brief
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=true --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  name: hubble-enterprise
  namespace: cilium
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hubble-enterprise
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: hubble-enterprise-1.10.3
        app.kubernetes.io/name: hubble-enterprise
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: hubble-enterprise
      initContainers:
      - name: enterprise-operator
        command:
        - hubble-enterprise-operator
        image: "quay.io/isovalent/hubble-enterprise-operator:v1.10.2"
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
      - name: enterprise-init
        image: "quay.io/isovalent/hubble-enterprise-metadata:current"
        imagePullPolicy: Always
        terminationMessagePolicy: FallbackToLogsOnError
        command:
        - sh
        args:
          - -c
          - |
              cp -r /var/run/hubble-fgs/* /var/lib/hubble-fgs/metadata
              until [ -S /var/run/cilium/cilium.sock -a -S /var/run/cilium/monitor1_2.sock ]; do sleep 3; done
        volumeMounts:
          - mountPath: /var/lib/hubble-fgs/metadata
            name: metadata-files
          - mountPath: /var/run/cilium
            name: cilium-run
      containers:
      - name: export-stdout
        image: "quay.io/isovalent/hubble-export-stdout:v1.0.3"
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
        env:
          []
        securityContext:
          {}
        resources:
          {}
        command:
          - hubble-export-stdout
        args:
          - /var/run/cilium/hubble/fgs.log
          - /var/run/cilium/hubble/hubble.log
        volumeMounts:
          - name: export-logs
            mountPath: /var/run/cilium/hubble
      - name: enterprise
        securityContext:
          privileged: true
        image: "quay.io/isovalent/hubble-enterprise:v1.10.2"
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
        command:
          - /usr/bin/hubble-fgs
        args:
          - --config-dir=/etc/hubble-enterprise
        volumeMounts:
          - mountPath: /var/lib/hubble-fgs/metadata
            name: metadata-files
          - mountPath: /etc/hubble-enterprise
            name: fgs-config
            readOnly: true
          - mountPath: /sys/fs/bpf
            mountPropagation: Bidirectional
            name: bpf-maps
          - mountPath: "/var/run/cilium"
            name: cilium-run
          - mountPath: /var/run/cilium/hubble
            name: export-logs
          - mountPath: "/procRoot"
            name: host-proc
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                  fieldPath: spec.nodeName
        livenessProbe:
          exec:
            command:
            - hubble-enterprise
            - status
            - --server-address
            - localhost:54321
      tolerations:
      - operator: Exists
      hostNetwork: true
      dnsPolicy: Default
      terminationGracePeriodSeconds: 1
      volumes:
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
      - name: export-logs
        hostPath:
          path: /var/run/cilium/hubble
          type: DirectoryOrCreate
      - name: fgs-config
        configMap:
          name: hubble-enterprise-config
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      - name: host-proc
        hostPath:
          path: /proc
          type: Directory
      - emptyDir: {}
        name: metadata-files
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: cilium
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/isovalent/operator-generic:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium-enterprise/charts/cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/isovalent/hubble-relay:v1.13.4-cee.1"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
            - --debug
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium-enterprise/charts/hubble-ui/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cilium
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/isovalent/hubble-ui-enterprise:v0.17.6"
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
              name: http
          resources:
            {}
          volumeMounts:
            - name: hubble-ui-nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
        - name: backend
          image: "quay.io/isovalent/hubble-ui-enterprise-backend:v0.17.6"
          imagePullPolicy: Always
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
            - name: GOPS_ENABLED
              value: "false"
          ports:
            - containerPort: 8090
              name: grpc
          resources:
            {}
          volumeMounts:
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
