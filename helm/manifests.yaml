---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: cilium
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-enterprise
  namespace: cilium
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium-enterprise/charts/hubble-ui/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQTYrWXE3L3ZzKzJQaG9BeGZHOTdFREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3T0RBMk1UY3dOakl3V2hjTk1qY3dPREEyTVRjdwpOakl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREIrQ0JXOC9YM2Z1WkJXN3ArcGhKeng2YkdQcENKRGloTEd3Z2FPYjRtQVk2NkQ5ZnMKcHRrdktjdzVlcWx1NmJtRHp5QTF6bThLOFhZRWtjV3YwMUFYTXgzenZHODJ6Rlppajc3RGlWSi9OenBCSDVxSgp3MUJYa01RWUlOSXlHSS9CcDBoRFRJS1ZkVytYYWJ2UzZGYzdVWERmbTRIcHoxOUhtNGhWVEdqQjg4REdQc01HCldEaSt5TTBLa3ptb1BiTzlkbzdTZnhkcy9NcGFJY1IyZkV5cmNJVE1lZTJmc3NsREo1Zzg3TkJydzV6dklKMHoKN05XUVpvWHQ0bUpSaDdCVVVkZ2ZvVTNyRk5zTkVjZENwUDY5TWFmZWRKKzByWGtaRlNxNmU3aXJ0WU5WaHIyMwpEdUZrVG9xRVd2aUgrc1p0dlptdzNoQ2NwQ3BvRk9RdzJZcy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV3cU1pZFVpc2NUM2JGT0xOVUpXTFVPdVRObm93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEQjV6blUvSEJ2T2syclZyRFhRUUhnWCtxZnl0K0h3UWpEWTF0WnhWQkdqNVlTRVhEVno1YXZOCllBL28zNmpENjMxLzBMZDVWSnhENWZlZ1hQekxacjVMakFxSUtEZDdnYmF4RzRZTnkxeFRWZ2l4RHBReitma3IKOTZGcWkyZi9iREs0U25IWHZUckhCWTc4T1RML21rWFlHV3FXMnJNWFBIZi9ZUnNIOW05b0lpbjdHNjRZdGVqagpyaGtSd3NUYWpEVHFvYW9NR3hjamdHcnlBdEFQMGp2YXJVQmpEbXNUVS95WkRXV0RZOXU3VktKOUdadkVSTnd2CjZtNUh4dVJZMzJZNXlMVHRBc1hueGtrM0VYbGJwVUdiRzllVDRlMU9Ta1lmY3ZUOUpoVVhpOXFSVStoenVRSG4Kd0toUmN5R3FhdmJkcy9xSHpIZ3czV0VYRCt2SnpnVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2ZnZ1Z2UDE5MzdtUVZ1NmZxWVNjOGVteGo2UWlRNG9TeHNJR2ptK0pnR091Zy9YCjdLYlpMeW5NT1hxcGJ1bTVnODhnTmM1dkN2RjJCSkhGcjlOUUZ6TWQ4N3h2TnN4V1lvKyt3NGxTZnpjNlFSK2EKaWNOUVY1REVHQ0RTTWhpUHdhZElRMHlDbFhWdmwybTcwdWhYTzFGdzM1dUI2YzlmUjV1SVZVeG93ZlBBeGo3RApCbGc0dnNqTkNwTTVxRDJ6dlhhTzBuOFhiUHpLV2lIRWRueE1xM0NFekhudG43TEpReWVZUE96UWE4T2M3eUNkCk0relZrR2FGN2VKaVVZZXdWRkhZSDZGTjZ4VGJEUkhIUXFUK3ZUR24zblNmdEsxNUdSVXF1bnU0cTdXRFZZYTkKdHc3aFpFNktoRnI0aC9yR2JiMlpzTjRRbktRcWFCVGtNTm1MUHdJREFRQUJBb0lCQUJxaVhwWnlBMWxMdElSTworeW0rMWhQTjIybW5WNk5xTFVBNjR2N3U1TnhGSkhzS0IrVTM5K1NSQWJqMnplTXI5c3hSbWFPcHgvZWh0a25rClZsZlJWVk1LTXRld0RUbGlENDZUSEdldktJUE5hcE5jcXBTMkhBY2FHc01SWnF0NFVlME9jazdEWjc3c0ZEbWYKVENvbXV5dXJBQ3ZFSjYrYVNRUUZLRkJHSUxCWThkQmYwVFAzSjZqdC9XK0hYakxJM1U0d1VwQkdTQ1F0Q1ErWApoTlJZSnJPemh6bC9GMmhVS3VqcFJtS3pkQ2RUaGxvU3hXdFlEclN5VE81czZ0dmVJNm0wUldaSEpwT1pBSTNWCkcyWkh1Z280aUVjUDNjWnA3UTg3K3FlanhYWFREaFlXNCtGQ21LN0ovWGZsNXBtWHFWRm5GTnpBdkxWZ3RBbGQKaERkeFZya0NnWUVBN2ZDTVl4blJ0STlXSDEzeGk1VnhGSnRUQkMzc2JncFNTQmlOdEFWdTJleUNSbCsrSXZOVgp6YTk0K0xheldpL05KaFUwaUJRSDFxT2FmSy9sY2hIRllaeWJWMWVib2F0eE9FMVlZcE5zZE9rNWZNUmd5WS9UCmZsejFscVZMVXNuQTFUZ3RqUHNWYllpaW1PYTZEQ0w3dnlUZVRRdlBTZnZuYnRyQlhuN0FqWk1DZ1lFQTBMRXUKT0JwOGtnSXJXWkdHemdRSWdGSzFvSWZSRjZLandvN3dlbitJYlFnMGd2Uk9UTElDQjJpcUFaVjZHVlNpenh0dQovQUNJSE9wdmlQck1rY2ZhTjRKREFMa1pseDZDZlc0c3IxSG91OWNqcG93dFBxNVJuZGxQT3prcHhFL09SMFcrCm9xbWovMkgwSXZKeTZOTVV2STBNd0VuNjJYVDVIWGQ5d0JtTHR5VUNnWUJjcHo4RG1CcEE1VS8wQnZENEdjbGUKN056MjA2c3RibmQ3KzVPeWRpc2tVU1Nwb3I2M2ZXbjhIa2hORVZmbDFwZGNMUVczdDVVVno3OW9ybFg2aFZFSApJYVNiN2xGOE12WnpwaXEwdUJPVHN2M2Z4OWlvcElrR3U4d21UVmQzZFhqUmpuNnVWMWVRdjVRUlZrYzhVcU1WClc1WDFDcFE5aXdvajhLczcwTC9LWVFLQmdRQ1Fvc3ZDckhDN2pPOVljMmkzYmNvcWphZzlxd082V3NrZWRZeXIKaWFvV3p3SDk1SzVEcjNlQ2hRS1dlRytZRUxXSnpweWI0UTUwNC9JTFFLNzVOa2JDQS9ER0ZvTnEzZ1ZZUXp5TApBYnpJT3ZJRllzK1V5cUhjUVprTkZiQWgwNkhHZWNzRzE0WEc0SytnYk9KQkJOSXhYNXgveElZcm9rdHBKY0NzCm04ZmVWUUtCZ1FDUEFxNzFCSFd5T2g1Szh0Qko5UWluMTM4cXBjckg4Y0FBa2M5UXR4dVA4d04ycTI5a0RqTUsKdEtmdnErZEhVUlo1aWwxUFR5NlFiSll2SWJXWURTeDNyWkxOMlIrTUhrYTZrQ1hMWjlZRmsxYTRENUhwTzlxRgppMVBUMVZGWkw1VkZYZWZYdE1SdjlsQng2NjlMZ2RDTEhMSUpabGNKVGFMeUg1am5xdVUzVmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: cilium
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQTYrWXE3L3ZzKzJQaG9BeGZHOTdFREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3T0RBMk1UY3dOakl3V2hjTk1qY3dPREEyTVRjdwpOakl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREIrQ0JXOC9YM2Z1WkJXN3ArcGhKeng2YkdQcENKRGloTEd3Z2FPYjRtQVk2NkQ5ZnMKcHRrdktjdzVlcWx1NmJtRHp5QTF6bThLOFhZRWtjV3YwMUFYTXgzenZHODJ6Rlppajc3RGlWSi9OenBCSDVxSgp3MUJYa01RWUlOSXlHSS9CcDBoRFRJS1ZkVytYYWJ2UzZGYzdVWERmbTRIcHoxOUhtNGhWVEdqQjg4REdQc01HCldEaSt5TTBLa3ptb1BiTzlkbzdTZnhkcy9NcGFJY1IyZkV5cmNJVE1lZTJmc3NsREo1Zzg3TkJydzV6dklKMHoKN05XUVpvWHQ0bUpSaDdCVVVkZ2ZvVTNyRk5zTkVjZENwUDY5TWFmZWRKKzByWGtaRlNxNmU3aXJ0WU5WaHIyMwpEdUZrVG9xRVd2aUgrc1p0dlptdzNoQ2NwQ3BvRk9RdzJZcy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV3cU1pZFVpc2NUM2JGT0xOVUpXTFVPdVRObm93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEQjV6blUvSEJ2T2syclZyRFhRUUhnWCtxZnl0K0h3UWpEWTF0WnhWQkdqNVlTRVhEVno1YXZOCllBL28zNmpENjMxLzBMZDVWSnhENWZlZ1hQekxacjVMakFxSUtEZDdnYmF4RzRZTnkxeFRWZ2l4RHBReitma3IKOTZGcWkyZi9iREs0U25IWHZUckhCWTc4T1RML21rWFlHV3FXMnJNWFBIZi9ZUnNIOW05b0lpbjdHNjRZdGVqagpyaGtSd3NUYWpEVHFvYW9NR3hjamdHcnlBdEFQMGp2YXJVQmpEbXNUVS95WkRXV0RZOXU3VktKOUdadkVSTnd2CjZtNUh4dVJZMzJZNXlMVHRBc1hueGtrM0VYbGJwVUdiRzllVDRlMU9Ta1lmY3ZUOUpoVVhpOXFSVStoenVRSG4Kd0toUmN5R3FhdmJkcy9xSHpIZ3czV0VYRCt2SnpnVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2ZnZ1Z2UDE5MzdtUVZ1NmZxWVNjOGVteGo2UWlRNG9TeHNJR2ptK0pnR091Zy9YCjdLYlpMeW5NT1hxcGJ1bTVnODhnTmM1dkN2RjJCSkhGcjlOUUZ6TWQ4N3h2TnN4V1lvKyt3NGxTZnpjNlFSK2EKaWNOUVY1REVHQ0RTTWhpUHdhZElRMHlDbFhWdmwybTcwdWhYTzFGdzM1dUI2YzlmUjV1SVZVeG93ZlBBeGo3RApCbGc0dnNqTkNwTTVxRDJ6dlhhTzBuOFhiUHpLV2lIRWRueE1xM0NFekhudG43TEpReWVZUE96UWE4T2M3eUNkCk0relZrR2FGN2VKaVVZZXdWRkhZSDZGTjZ4VGJEUkhIUXFUK3ZUR24zblNmdEsxNUdSVXF1bnU0cTdXRFZZYTkKdHc3aFpFNktoRnI0aC9yR2JiMlpzTjRRbktRcWFCVGtNTm1MUHdJREFRQUJBb0lCQUJxaVhwWnlBMWxMdElSTworeW0rMWhQTjIybW5WNk5xTFVBNjR2N3U1TnhGSkhzS0IrVTM5K1NSQWJqMnplTXI5c3hSbWFPcHgvZWh0a25rClZsZlJWVk1LTXRld0RUbGlENDZUSEdldktJUE5hcE5jcXBTMkhBY2FHc01SWnF0NFVlME9jazdEWjc3c0ZEbWYKVENvbXV5dXJBQ3ZFSjYrYVNRUUZLRkJHSUxCWThkQmYwVFAzSjZqdC9XK0hYakxJM1U0d1VwQkdTQ1F0Q1ErWApoTlJZSnJPemh6bC9GMmhVS3VqcFJtS3pkQ2RUaGxvU3hXdFlEclN5VE81czZ0dmVJNm0wUldaSEpwT1pBSTNWCkcyWkh1Z280aUVjUDNjWnA3UTg3K3FlanhYWFREaFlXNCtGQ21LN0ovWGZsNXBtWHFWRm5GTnpBdkxWZ3RBbGQKaERkeFZya0NnWUVBN2ZDTVl4blJ0STlXSDEzeGk1VnhGSnRUQkMzc2JncFNTQmlOdEFWdTJleUNSbCsrSXZOVgp6YTk0K0xheldpL05KaFUwaUJRSDFxT2FmSy9sY2hIRllaeWJWMWVib2F0eE9FMVlZcE5zZE9rNWZNUmd5WS9UCmZsejFscVZMVXNuQTFUZ3RqUHNWYllpaW1PYTZEQ0w3dnlUZVRRdlBTZnZuYnRyQlhuN0FqWk1DZ1lFQTBMRXUKT0JwOGtnSXJXWkdHemdRSWdGSzFvSWZSRjZLandvN3dlbitJYlFnMGd2Uk9UTElDQjJpcUFaVjZHVlNpenh0dQovQUNJSE9wdmlQck1rY2ZhTjRKREFMa1pseDZDZlc0c3IxSG91OWNqcG93dFBxNVJuZGxQT3prcHhFL09SMFcrCm9xbWovMkgwSXZKeTZOTVV2STBNd0VuNjJYVDVIWGQ5d0JtTHR5VUNnWUJjcHo4RG1CcEE1VS8wQnZENEdjbGUKN056MjA2c3RibmQ3KzVPeWRpc2tVU1Nwb3I2M2ZXbjhIa2hORVZmbDFwZGNMUVczdDVVVno3OW9ybFg2aFZFSApJYVNiN2xGOE12WnpwaXEwdUJPVHN2M2Z4OWlvcElrR3U4d21UVmQzZFhqUmpuNnVWMWVRdjVRUlZrYzhVcU1WClc1WDFDcFE5aXdvajhLczcwTC9LWVFLQmdRQ1Fvc3ZDckhDN2pPOVljMmkzYmNvcWphZzlxd082V3NrZWRZeXIKaWFvV3p3SDk1SzVEcjNlQ2hRS1dlRytZRUxXSnpweWI0UTUwNC9JTFFLNzVOa2JDQS9ER0ZvTnEzZ1ZZUXp5TApBYnpJT3ZJRllzK1V5cUhjUVprTkZiQWgwNkhHZWNzRzE0WEc0SytnYk9KQkJOSXhYNXgveElZcm9rdHBKY0NzCm04ZmVWUUtCZ1FDUEFxNzFCSFd5T2g1Szh0Qko5UWluMTM4cXBjckg4Y0FBa2M5UXR4dVA4d04ycTI5a0RqTUsKdEtmdnErZEhVUlo1aWwxUFR5NlFiSll2SWJXWURTeDNyWkxOMlIrTUhrYTZrQ1hMWjlZRmsxYTRENUhwTzlxRgppMVBUMVZGWkw1VkZYZWZYdE1SdjlsQng2NjlMZ2RDTEhMSUpabGNKVGFMeUg1am5xdVUzVmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQTYrWXE3L3ZzKzJQaG9BeGZHOTdFREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3T0RBMk1UY3dOakl3V2hjTk1qY3dPREEyTVRjdwpOakl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREIrQ0JXOC9YM2Z1WkJXN3ArcGhKeng2YkdQcENKRGloTEd3Z2FPYjRtQVk2NkQ5ZnMKcHRrdktjdzVlcWx1NmJtRHp5QTF6bThLOFhZRWtjV3YwMUFYTXgzenZHODJ6Rlppajc3RGlWSi9OenBCSDVxSgp3MUJYa01RWUlOSXlHSS9CcDBoRFRJS1ZkVytYYWJ2UzZGYzdVWERmbTRIcHoxOUhtNGhWVEdqQjg4REdQc01HCldEaSt5TTBLa3ptb1BiTzlkbzdTZnhkcy9NcGFJY1IyZkV5cmNJVE1lZTJmc3NsREo1Zzg3TkJydzV6dklKMHoKN05XUVpvWHQ0bUpSaDdCVVVkZ2ZvVTNyRk5zTkVjZENwUDY5TWFmZWRKKzByWGtaRlNxNmU3aXJ0WU5WaHIyMwpEdUZrVG9xRVd2aUgrc1p0dlptdzNoQ2NwQ3BvRk9RdzJZcy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV3cU1pZFVpc2NUM2JGT0xOVUpXTFVPdVRObm93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEQjV6blUvSEJ2T2syclZyRFhRUUhnWCtxZnl0K0h3UWpEWTF0WnhWQkdqNVlTRVhEVno1YXZOCllBL28zNmpENjMxLzBMZDVWSnhENWZlZ1hQekxacjVMakFxSUtEZDdnYmF4RzRZTnkxeFRWZ2l4RHBReitma3IKOTZGcWkyZi9iREs0U25IWHZUckhCWTc4T1RML21rWFlHV3FXMnJNWFBIZi9ZUnNIOW05b0lpbjdHNjRZdGVqagpyaGtSd3NUYWpEVHFvYW9NR3hjamdHcnlBdEFQMGp2YXJVQmpEbXNUVS95WkRXV0RZOXU3VktKOUdadkVSTnd2CjZtNUh4dVJZMzJZNXlMVHRBc1hueGtrM0VYbGJwVUdiRzllVDRlMU9Ta1lmY3ZUOUpoVVhpOXFSVStoenVRSG4Kd0toUmN5R3FhdmJkcy9xSHpIZ3czV0VYRCt2SnpnVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU1TZzdNWlc2V1VtQzdtRW96aWVoZE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURnd05qRTNNRFl5TUZvWERUSTNNRGd3TmpFMwpNRFl5TUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZpU05KTFAvSkpMTGl0T1JEVmpjbHFJT0hNQUIKQjRZTlg2K3lwd1RDN0R0M1hDalNvaUt4cHhQN2xpdjMrYTZrWFZYS2NwaHR5cjJKSUgxOHdRcW41bTh0Vk5hUApVVG9IOFQwenpkZFY5UkpUakYvSEh3cnZqUVNUZ2x1N1BFTG5rd0U1Q3R0cjh3UFI4QUczOGFOVDdndW9idjdKCjZSMS9GZVFOYm9rT2hPTDZ2NHFhWGpoK2xnV3JnR0dpcW9yUldSc3ZuNE9HdVpJRFZHTk9NbC8zaEgzeDZ5SWMKU016dlRyM24yOHVJcUovOUE2OTJSaTNzeFJockpGQmxmUG9QSUlIMm15bmpSY1RhU2pxQUppSGx0RE8vaUkregpMZFd1bS9zOFZ3SytxVVhlWk5HOEhUN2J3TzhRcWdWVFg5R0lkN0pFSWNTdStoZUYvbG5tY1N5cU13SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVENveUoxU0t4eFBkc1U0czFRbFl0UQo2NU0yZWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTUNEOTZ1UVZyMXFDYzdiQ3FUMFRocUEzRUJDbXduZkhOdmdOTm1kTnViRVA5aVAKVDEwS29BMlBBaVJiOUZFNVREM0Q5RXBmWjJFZks0RU52Z2x1ZlJ5d0NIeExhc3hmT1VLSmhGZTFsWi9iMUxnbQpOM1U3WVJHTnhsbFFLa0FSRVpkWExHVnhVS0FINVdMZ0FxQ1ZoSERjZVRCWWRGc3h3SEdqWGRUaEhoSzI0RlFqCnprWWNPdEhqSU82VFk4Vis1VHZIdTJOOG5qWHVYWkErb2NzdWg2T1JJRGtIb0ppajRNV1g3NXhaMFgwaEJ5Y0EKZEhtWXpHNHhzdW9EU3hHSGhKNzdJK3RLUHgyNEdlejgzV1M1QW5GdW5kYW5mc0JwZTVuSk44OFIxcnRVYmo4WAozVVVmTWFzVTRRR0hNTVFTbDBua0RFN3Ixc0VVdjNSbW5udUFBZFk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmlTTkpMUC9KSkxMaXRPUkRWamNscUlPSE1BQkI0WU5YNit5cHdUQzdEdDNYQ2pTCm9pS3hweFA3bGl2MythNmtYVlhLY3BodHlyMkpJSDE4d1FxbjVtOHRWTmFQVVRvSDhUMHp6ZGRWOVJKVGpGL0gKSHdydmpRU1RnbHU3UEVMbmt3RTVDdHRyOHdQUjhBRzM4YU5UN2d1b2J2N0o2UjEvRmVRTmJva09oT0w2djRxYQpYamgrbGdXcmdHR2lxb3JSV1Jzdm40T0d1WklEVkdOT01sLzNoSDN4NnlJY1NNenZUcjNuMjh1SXFKLzlBNjkyClJpM3N4UmhySkZCbGZQb1BJSUgybXlualJjVGFTanFBSmlIbHRETy9pSSt6TGRXdW0vczhWd0srcVVYZVpORzgKSFQ3YndPOFFxZ1ZUWDlHSWQ3SkVJY1N1K2hlRi9sbm1jU3lxTXdJREFRQUJBb0lCQUZleW5oTEduakF0TUlubwpTS2VpUzZPQ1BRWVBuS251cnk1cDUvbFduZHk5RkxGQjl0eG5LZzhJaldwVy96bCt6anBxUGtTYWYxRWFHQ3dQCkZNSW9ld1l5VXZNbFB0YlU4Q0xZK3BLKzlkdGh4MzBnRThRQ2xEZ3pXeUd0MDI3WTROd1JuVkNmb1d0bFlLZlUKOHhVVklyblJVSzlZL3FGeFJGTkJhdHlIaEZYUFdqejFTaW91VFRCcloxZjNqdzJWN2VGRTJxb1dZOU9NOGNlSwp3K0ZTUmpRZ3NXemtZTTlOSDhiRWFOakdEOGwyNmk3SktGQ1ZBVXVNdTROdVc0MzFwaDJYU1U2YmluMEV1UHdsCm5IZ2xCTU9FU3VUYm1JR3h6WmJtdERFVGsrRzdWTG5JeDVQakJDYmYzdEtQSGJmaE42N1BqMHZBNElTdkU1OEQKOVRneXpZa0NnWUVBeVVaS0UvaWNtampzVWpuS1VMZm1keWl6Tmg4eVd0VGt1QXZRTVVwR3Q2cENtVmJKSFJCagpnUmk1VHNRcWd6eHgyMmJWd3FndHBzeG4yYy92dE92L05yL0JtL3puN3ovUmtSd1BXampPNTN6ZTBqcnNDNCtlClBYd09CMU5hM09jMWU0WVFLR0hQSlg5ZGZVMG15UFpoTEtXYkJWVUZaN2p0dEZLbkZmU3RKUVVDZ1lFQThkZHYKSVZaOHhkd2JlZjFENFlKRGdLTkczbThiYXZrRm9rOHprNEpmaUFIUE96cUVGMDBZSkZvQ3ZQRHF0UlpZeldmTgorclhVc1ExTGtCbWxBTGQwTlh5ZzlaYmtBdkQ2aTBJdlQwOVRncXV3dHBVS0ZDcDdUYmVnRTZ3MmRrZloxeUtRCnJsaHExMysxRk0vRnFnVG1wd0tyR2I2Q1I4OExMTGtLaDBiY3Q5Y0NnWUJqVFlpUzNkLzF2d3ZwYlpYQnlWbXQKaEtrV2xNRzFTc0FsaGI2TDh3ZDg2a1c5ZmJIdjR2d1UzMnZkenE3aTNObVgwOTYzRVY2a29zakNEL05HSWdGaQpzNjBFRnYwZmJ5OG9GdDRFTjI3dGl4QXNUT0hVdW1EcUdPQ2JBS2Nkd2YwREdwdXlNTCtRMG92L25DYjhrNEpTCkVzcXZFTWwvNlI5dURqRmRoY0EvT1FLQmdRRERuMVFSVDNoV1JCa2xzQ3Y4ZWZaSVU4cTdtbncvSjNmYk50MnQKY0VQK0xCaUkvR2hrd01QS2c5UzdLTlZ4N2NXZlFWeG9kRFM3a3RtUWttM2FDb3RCeUxJYWRoZXlHV05ReWhTaQp2clA2ZXc3U1lmUnBJNFBoOWFyU3Z2YSs3cGZUWWU1T1dNN3p5aVdiMUFVNzVnTDlEVGVCOTR4Q3NjT0VSWm15Cm15dG11UUtCZ0h4ZHF4VDRMTXZkVU1ndG4rNlVYcmZhOFJPUjFuU3dDMkxQRW5WbDdvUGhBdHVpME5TUU9CUEYKZ1AvS2NIeUpvUnpZNDVYNFBXa0Q5WllpSVUraFltbk1kUUQrMVAybGZ6UWVyTGd6MDVKY2xQaTZPbzRHM0ozdgo2eXM1MDYxSWU3VjM4TUpTT3RkcDM5MC9aaG9uODR5enlpUlphaURtYVM5VUFYN1ZtQ2xOCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: cilium
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQTYrWXE3L3ZzKzJQaG9BeGZHOTdFREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalF3T0RBMk1UY3dOakl3V2hjTk1qY3dPREEyTVRjdwpOakl3V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREIrQ0JXOC9YM2Z1WkJXN3ArcGhKeng2YkdQcENKRGloTEd3Z2FPYjRtQVk2NkQ5ZnMKcHRrdktjdzVlcWx1NmJtRHp5QTF6bThLOFhZRWtjV3YwMUFYTXgzenZHODJ6Rlppajc3RGlWSi9OenBCSDVxSgp3MUJYa01RWUlOSXlHSS9CcDBoRFRJS1ZkVytYYWJ2UzZGYzdVWERmbTRIcHoxOUhtNGhWVEdqQjg4REdQc01HCldEaSt5TTBLa3ptb1BiTzlkbzdTZnhkcy9NcGFJY1IyZkV5cmNJVE1lZTJmc3NsREo1Zzg3TkJydzV6dklKMHoKN05XUVpvWHQ0bUpSaDdCVVVkZ2ZvVTNyRk5zTkVjZENwUDY5TWFmZWRKKzByWGtaRlNxNmU3aXJ0WU5WaHIyMwpEdUZrVG9xRVd2aUgrc1p0dlptdzNoQ2NwQ3BvRk9RdzJZcy9BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV3cU1pZFVpc2NUM2JGT0xOVUpXTFVPdVRObm93RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEQjV6blUvSEJ2T2syclZyRFhRUUhnWCtxZnl0K0h3UWpEWTF0WnhWQkdqNVlTRVhEVno1YXZOCllBL28zNmpENjMxLzBMZDVWSnhENWZlZ1hQekxacjVMakFxSUtEZDdnYmF4RzRZTnkxeFRWZ2l4RHBReitma3IKOTZGcWkyZi9iREs0U25IWHZUckhCWTc4T1RML21rWFlHV3FXMnJNWFBIZi9ZUnNIOW05b0lpbjdHNjRZdGVqagpyaGtSd3NUYWpEVHFvYW9NR3hjamdHcnlBdEFQMGp2YXJVQmpEbXNUVS95WkRXV0RZOXU3VktKOUdadkVSTnd2CjZtNUh4dVJZMzJZNXlMVHRBc1hueGtrM0VYbGJwVUdiRzllVDRlMU9Ta1lmY3ZUOUpoVVhpOXFSVStoenVRSG4Kd0toUmN5R3FhdmJkcy9xSHpIZ3czV0VYRCt2SnpnVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lSQUt0VE1CbEhxUlU4VktNZUFkWTdVZlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURnd05qRTNNRFl5TUZvWERUSTNNRGd3TmpFMwpNRFl5TUZvd01ERXVNQ3dHQTFVRUF3d2xLaTVrWldOdmMzUmxMWEJoYm1SaExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTVhXNFFFZjZJME4KZWFJQnI2V1VUTStKQnpNbUJCS3NwdlJaTGluZXVnVHl4MVZqU1pUSStuV2M4YndXaktCN2hwNTJNVFg3cGlTUgpDaUtzbVZNV1phb3RiTU8zYnNmUGp4dXRJVkQxYk9CRkZFRVllMXJ5SkpGQXlLTGY4MnpJRDAveEdhZFdaOGNqCk9wZTUvWi9FelUvQi94SWREUTB3WlZHeFZxMDRDSkpyZmlQT1RVdVA2WHFmeE41S3E2UFBieFJuL1JBTGJKU04KUHpqSmo2WFBObjNrV1ZhT0JUNHNpSUd2VVlhZlJZOGhFM0xRRFZXUGV3QXRvbE5zN1lYeFRZbTRSVm5JajNuTQpSQmR6NkJ2c1hONzF0UGZES2ZqWjhJRzNWTzdmMXVCRDZEZnRCWFZDTWV2ODg4QWNhZTgvNnNYa3U1Uk5UTG1lCkNjMXAvZUJSekpVQ0F3RUFBYU9Ca3pDQmtEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0hRWURWUjBsQkJZd0ZBWUkKS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXdId1lEVlIwakJCZ3dGb0FVd3FNaQpkVWlzY1QzYkZPTE5VSldMVU91VE5ub3dNQVlEVlIwUkJDa3dKNElsS2k1a1pXTnZjM1JsTFhCaGJtUmhMbWgxClltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFrSlFtdDNLL0FCZU8KLy8wUXk1Z3d6SXdKaitOWlhOelBwaHlLd29BczlXK0dBam9mQjhPOGxVdm9PZUVnTlYxdVU4NlJrekFiMDVlcQoxaUJOWER5QXhDa2d2TWdhVTJZQ3Y4NVNMWmVERkVOYXY3UkZUZzNIWGN5YmpqMHovUDhqQkRUQVVlUmJDemVTCkg2d1FES1RBOFNhdmp6WUhjRWxXY1BBMWlEdm41UFRpODBTb1dQK1N1ditNaGNwbEl0YjNlR0xzTFdqSjVCYkgKcEV6enJLYnZVQWh1MTZIODNydTNhSlhPSVpKaklYYzVMWERoZElLcmNObDF5SXd6UzdLYzlDTTZsY1FwbUJGUgphVFpWRTdjZStUNVNqWC9wTmFxUlBUNTh3WFdiVkJrZnJSSkFPMmRXL2ZUZDl3L1Vwd1RmS1BudDhTZm5GbXBkCllkMnZCNXRuSlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeGRiaEFSL29qUTE1b2dHdnBaUk16NGtITXlZRUVxeW05Rmt1S2Q2NkJQTEhWV05KCmxNajZkWnp4dkJhTW9IdUdubll4TmZ1bUpKRUtJcXlaVXhabHFpMXN3N2R1eDgrUEc2MGhVUFZzNEVVVVFSaDcKV3ZJa2tVRElvdC96Yk1nUFQvRVpwMVpueHlNNmw3bjluOFROVDhIL0VoME5EVEJsVWJGV3JUZ0lrbXQrSTg1TgpTNC9wZXAvRTNrcXJvODl2RkdmOUVBdHNsSTAvT01tUHBjODJmZVJaVm80RlBpeUlnYTlSaHA5Rmp5RVRjdEFOClZZOTdBQzJpVTJ6dGhmRk5pYmhGV2NpUGVjeEVGM1BvRyt4YzN2VzA5OE1wK05ud2diZFU3dC9XNEVQb04rMEYKZFVJeDYvenp3QnhwN3ovcXhlUzdsRTFNdVo0SnpXbjk0RkhNbFFJREFRQUJBb0lCQUd3Z0ZuVXc1VDVDQVJvago1Y1dQR2JQTFpsMzBCd0hWenFGNUpCdktHTXlmaTRZRmI2K2JjQmRib1ZwMDBJTGRRQ1BXNE9wcUVOR25XMnk3Ci9FaEcwMldBMGhMZGEvUlVZaGgwTk9NMFh6N3JRamlaa3NHUDJhQnhVYmFDdzEzT3NWKzFtNW16UmFDMmhrMXEKWDAwMG1DbGhFM0RvNDdzem1neGQ2Y3RkOW9GZXV6WkZXdlZnbmV2Mk1WVGRGTS9PcGNIYm5uOUtsZko4L3owcAp2cDZrOTJZSGhBcytnRlF2ZXRidVA1bEovWXZwWXJ5T2R2Y3ZjUmpMbU1wT2JnSG44RE1iUUZaM3ZSbERGZXorCk9rZ2tOZm9YeVZYSWRJTUVMNkdvV1g2VWQ5eUZGeDNYT2lsSk1SdjdLeXZNRDRWaFlGYXRrbXZxa2pJR09LblgKREtlaW5jRUNnWUVBK0JESnhOWElma2M5RFB6YXRSVGZvQlBvaU14MDErWTBMR1htYkowYUtJNjVBWjZITmVscAo3UU9kODZ3Rm5qZXJNVzU4YTlHa0swLzRsVlM1ZWxTMlRmZEFBSks1OXRlTEpIKzFuaDhIUzNFSXBRV1V5MmtkClF4RUMzaTZiR3VoK21YVlJONW54R1hrNmpQZ3N6SlNmcjR2M1pRY2s0VU9wZ3lSUjMvWDhBYTBDZ1lFQXpDclUKQ1pBS2ZsWS93azdiMU9jYjZRT3BVZmNNT3RqSUVuckUzTmhsRTVMT1cwSXFKaDlRZ0Y5MG42N3UrTFRoOGRBTwp0TkM4SDRkS25CeXVuYjZlSFpWR2czWCtENE9RRStLUFFFUFZ0d2Rrc211VjhmU3FXT3NGNUM3WjFqK1VWbHV6Ck81ZUNJeGJicmlIVzZ5MWM5cWU4N2RrUm5vZmMrbU5sZGZiclk0a0NnWUI2a2VFQVR4bVh1NTlnMFhkSFRoOEkKdTQyRU9uSHBVNmVuNEZtd2hSZXR2b2VQVTBNLzBpc3luenptYjdMKzhFYTRULzFPVVBHckxRS0kxcW9tMWNDVwpXWHJZVGFkeFhpTTBUNTN2bVNsRGo0QlQrYVFCdGRodGtQUTMwQk4zZ2pVN29nb1ZUUTBpSnhKVklUTVJpc1kwCk9SWnVaczlFTnVpRkVlY2FvREo2cVFLQmdHd05Eb0t4Rkp5Z0VNWkk3ZGJUS05ZODlkTkhKOVhNL0xXcSs1elYKZVVqT25SOTIrTStNS3hLRmNqZEFZWUNHV2oyYm11emV1M0VFTE54SjRhL2lQZFB5T0l0Q1d0N2pCZEZBU2dmOAozcElxKzRQaHBFMlU2c0o4UDNYdnhhRzVyRXUzNURkWmk2bitZdXpaUStEYTlTUWt5YndtOFVneEp5WHNqTG5OCm4rM2hBb0dBUyt4Y0wyeXRjanNOQktBVjBPQXZ1c1hzZjI2eFBlYmNBR2ZlelRVVVBHcCt6bzJTUmJhZllzMzkKM290R3ZOdy83a2xJaE01NWVIYk1zYjRGUmxTbEVJYk5EOXJjd3FLVW9icmdzS1pLWUZ4dFh0bUhmNVZLRVBobApIdHNqalJIVGhSTHI4RU9wdmI4dDBPc0tCZTVvcDBGMFhFT0RtcVZjbVRnZFB6TlVRQkU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: cilium
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "true"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9962"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: decoste-panda
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"
  enable-cluster-aware-addressing: "false"
  enable-inter-cluster-snat: "false"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "true"

  kube-proxy-replacement: "disabled"
  bpf-lb-sock: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  cni-uninstall: "true"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;sourceContext=workload-name;destinationContext=workload-name
    drop:sourceContext=identity;destinationContext=identity;labelsContext=source_workload,destination_workload
    tcp
    flow
    port-distribution
    http
    flows-to-world
    policy
  enable-hubble-open-metrics: "true"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  cluster-pool-ipv4-cidr: "192.168.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  egress-gateway-healthcheck-timeout: "2s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-k8s-endpoint-slice: "true"
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-cilium-endpoint-slice: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium-enterprise/charts/cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: cilium
data:
  config.yaml: |
    cluster-name: decoste-panda
    peer-service: "hubble-peer.cilium.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 15s
    retry-timeout: 15s
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/fgs_configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-enterprise-config
  namespace: cilium
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
data:
  procfs: /procRoot
  tlstc: "false"
  enable-process-cred: "false"
  enable-process-ns: "false"
  process-cache-size: "65536"
  export-filename: /var/run/cilium/hubble/fgs.log
  export-file-max-size-mb: "10"
  export-file-max-backups: "5"
  export-file-compress: "false"
  export-allowlist: |-
    {"event_set":["PROCESS_CONNECT", "PROCESS_EXEC", "PROCESS_HTTP", "PROCESS_KPROBE", "PROCESS_LISTEN", "PROCESS_TLS"]}
  export-denylist: |-
    {"health_check":true}
    {"namespace":["", "cilium", "kube-system"]}
  export-rate-limit: "-1"
  enable-k8s-api: "true"
  enable-cilium-api: "true"
  cilium-bpf: /sys/fs/bpf/tc/globals/
  metrics-server: :2112
  server-address: localhost:54321
  gops-address: localhost:8118
---
# Source: cilium-enterprise/charts/hubble-ui/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: cilium
data:
  nginx.conf: "server {\n    listen       8081;\n    server_name  localhost;\n\n    client_max_body_size 1G;\n    proxy_buffers 256 512k;\n    proxy_buffer_size 512k;\n    subrequest_output_buffer_size 8k;\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection \"Upgrade\";\n            proxy_set_header Host $host;\n            proxy_read_timeout 96000s;\n            proxy_send_timeout 96000s;\n            proxy_socket_keepalive on;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            rewrite  ^/(.*)  /$1 break;\n            proxy_pass http://localhost:8082;\n        }\n    }\n}\nserver {\n    listen       8082;\n    server_name  localhost;\n\n    root /app;\n    index index.html;\n\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n}"
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumsrv6egresspolicies
  - ciliumsrv6vrfs
  - ciliumnodeconfigs
  - ciliumcidrgroups
  verbs:
  - list
  - watch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  - ciliumsrv6egresspolicies
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumsrv6egresspolicies
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumegressgatewaypolicies
  verbs:
  # to allow CEGP watcher
  - watch
  - list
- apiGroups:
  - cilium.io
  resources:
  - ciliumegressgatewaypolicies/status
  verbs:
  # to allow CEGPs status.groupStatus updates
  - update
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies
  verbs:
  # to allow IEGP watcher
  - watch
  - list
- apiGroups:
  - isovalent.com
  resources:
  - isovalentegressgatewaypolicies/status
  verbs:
  # to allow IEGPs status.groupStatus updates
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - isovalentfqdngroups.isovalent.com
  - isovalentegressgatewaypolicies.isovalent.com
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - isovalent.com
  resources:
  - isovalentfqdngroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumcidrgroups
  verbs:
  - create
  - patch
  - delete
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-enterprise
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
      - isovalent.com
    resources:
      - tracingpolicies
      - tracingpoliciesnamespaced
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    resourceNames:
      - tracingpolicies.cilium.io
      - tracingpoliciesnamespaced.cilium.io
      - tracingpolicies.isovalent.com
    verbs:
      - update
---
# Source: cilium-enterprise/charts/hubble-ui/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: cilium
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/clusterrolebinding.yml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-enterprise
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-enterprise
subjects:
  - kind: ServiceAccount
    namespace: cilium
    name: hubble-enterprise
---
# Source: cilium-enterprise/charts/hubble-ui/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  namespace: cilium
  name: "hubble-ui"
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: cilium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium-enterprise/charts/cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: cilium
  labels:
    k8s-app: hubble
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium-enterprise/charts/cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  name: hubble-enterprise
  namespace: cilium
spec:
  ports:
    - name: metrics
      port: 2112
      protocol: TCP
      targetPort: 2112
  selector:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  type: ClusterIP
---
# Source: cilium-enterprise/charts/hubble-ui/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  labels:
    k8s-app: hubble-ui
  namespace: cilium
spec:
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
  type: ClusterIP
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: cilium
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9962"
        prometheus.io/scrape: "true"
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          exec:
            command:
            - cilium
            - status
            - --brief
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - cilium
            - status
            - --brief
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                /cni-install.sh --enable-debug=true --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9962
          hostPort: 9962
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/isovalent/cilium:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium-enterprise/charts/hubble-enterprise/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    helm.sh/chart: hubble-enterprise-1.10.3
    app.kubernetes.io/name: hubble-enterprise
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
  name: hubble-enterprise
  namespace: cilium
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: hubble-enterprise
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        helm.sh/chart: hubble-enterprise-1.10.3
        app.kubernetes.io/name: hubble-enterprise
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: hubble-enterprise
      initContainers:
      - name: enterprise-operator
        command:
        - hubble-enterprise-operator
        image: "quay.io/isovalent/hubble-enterprise-operator:v1.10.2"
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
      - name: enterprise-init
        image: "quay.io/isovalent/hubble-enterprise-metadata:current"
        imagePullPolicy: Always
        terminationMessagePolicy: FallbackToLogsOnError
        command:
        - sh
        args:
          - -c
          - |
              cp -r /var/run/hubble-fgs/* /var/lib/hubble-fgs/metadata
              until [ -S /var/run/cilium/cilium.sock -a -S /var/run/cilium/monitor1_2.sock ]; do sleep 3; done
        volumeMounts:
          - mountPath: /var/lib/hubble-fgs/metadata
            name: metadata-files
          - mountPath: /var/run/cilium
            name: cilium-run
      containers:
      - name: export-stdout
        image: "quay.io/isovalent/hubble-export-stdout:v1.0.3"
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
        env:
          []
        securityContext:
          {}
        resources:
          {}
        command:
          - hubble-export-stdout
        args:
          - /var/run/cilium/hubble/fgs.log
          - /var/run/cilium/hubble/hubble.log
        volumeMounts:
          - name: export-logs
            mountPath: /var/run/cilium/hubble
      - name: enterprise
        securityContext:
          privileged: true
        image: "quay.io/isovalent/hubble-enterprise:v1.10.2"
        imagePullPolicy: IfNotPresent
        terminationMessagePolicy: FallbackToLogsOnError
        command:
          - /usr/bin/hubble-fgs
        args:
          - --config-dir=/etc/hubble-enterprise
        volumeMounts:
          - mountPath: /var/lib/hubble-fgs/metadata
            name: metadata-files
          - mountPath: /etc/hubble-enterprise
            name: fgs-config
            readOnly: true
          - mountPath: /sys/fs/bpf
            mountPropagation: Bidirectional
            name: bpf-maps
          - mountPath: "/var/run/cilium"
            name: cilium-run
          - mountPath: /var/run/cilium/hubble
            name: export-logs
          - mountPath: "/procRoot"
            name: host-proc
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                  fieldPath: spec.nodeName
        livenessProbe:
          exec:
            command:
            - hubble-enterprise
            - status
            - --server-address
            - localhost:54321
      tolerations:
      - operator: Exists
      hostNetwork: true
      dnsPolicy: Default
      terminationGracePeriodSeconds: 1
      volumes:
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
      - name: export-logs
        hostPath:
          path: /var/run/cilium/hubble
          type: DirectoryOrCreate
      - name: fgs-config
        configMap:
          name: hubble-enterprise-config
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      - name: host-proc
        hostPath:
          path: /proc
          type: Directory
      - emptyDir: {}
        name: metadata-files
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: cilium
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/isovalent/operator-generic:v1.13.4-cee.1"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "10.0.0.1"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium-enterprise/charts/cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: cilium
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/isovalent/hubble-relay:v1.13.4-cee.1"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
            - --debug
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium-enterprise/charts/hubble-ui/templates/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  namespace: cilium
  labels:
    k8s-app: hubble-ui
  name: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/isovalent/hubble-ui-enterprise:v0.17.6"
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
              name: http
          resources:
            {}
          volumeMounts:
            - name: hubble-ui-nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
        - name: backend
          image: "quay.io/isovalent/hubble-ui-enterprise-backend:v0.17.6"
          imagePullPolicy: Always
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
            - name: GOPS_ENABLED
              value: "false"
          ports:
            - containerPort: 8090
              name: grpc
          resources:
            {}
          volumeMounts:
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
---
# Source: cilium-enterprise/charts/cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.
